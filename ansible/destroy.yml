---

- hosts: dev-client-group
  gather_facts: false
  remote_user: root
  roles:
    - role: layer2_vms
      tags: [ 'layer2','dev-client', 'ose3', 'vm' ]
      mode: start
    - role: layerX_openshift_demo_redhatmsa_on_devclient
      tags: [ 'layer2','dev-client', 'ose3', 'msademo', 'content' ]
      mode: destroy
      when: vm_exists is defined and vm_exists == true
    - role: layerX_ipa_client
      tags: [ 'layer2','dev-client', 'ose3', 'ipa-client','content' ]
      mode: destroy
      when: vm_exists is defined and vm_exists == true
    - role: layer2_rhel
      tags: [ 'layer2','dev-client', 'ose3', 'rhel' ]
      mode: destroy
      when: vm_exists is defined and vm_exists == true
    - role: layer2_vms
      tags: [ 'layer2','dev-client', 'ose3', 'vm' ]
      mode: destroy

- hosts: lookbusy-rhev-group
  gather_facts: false
  remote_user: root
  roles:
    - role: layer3_vm_on_rhev
      tags: [ 'layer3','lookbusy-rhev','lookbusy' ]
      mode: start
    - role: layer2_rhel
      tags: [ 'layer3','lookbusy-rhev','lookbusy', 'rhel' ]
      mode: destroy
      when: vm_exists is defined and vm_exists == true
    - role: layer3_vm_on_rhev
      tags: [ 'layer3','lookbusy-rhev','lookbusy', 'vm' ]
      mode: destroy
      when: vm_exists is defined and vm_exists == true


- hosts: lookbusy-osp-group
  gather_facts: false
  remote_user: root
  roles:
    - role: layer3_vm_on_openstack
      tags: [ 'layer3','lookbusy-osp','lookbusy' ]
      mode: readfacts
    - role: layer2_rhel
      tags: [ 'layer3','lookbusy-osp','lookbusy', 'rhel' ]
      mode: destroy
      when: vm_exists is defined and vm_exists == true
    - role: layer3_vm_on_openstack
      tags: [ 'layer3','lookbusy-osp','lookbusy', 'vm' ]
      mode: destroy
      when: vm_exists is defined and vm_exists == true



### BEGIN CLOUDFORMS

- hosts: cf-rhv-vm-group
  gather_facts: false
  remote_user: root
  roles:
    - role: layer3_vm_on_rhev
      tags: [ 'layer3', 'cf', 'vm']
      mode: start
      when: cf_is_deployed_on == 'rhv'

- hosts: cf-osp-vm-group
  gather_facts: false
  remote_user: root
  roles:
    - role: layer3_vm_on_openstack
      tags: [ 'layer2', 'cf', 'vm' ]
      mode: start
      when: cf_is_deployed_on == 'osp'


- hosts: cloudforms-group
  gather_facts: false
  remote_user: root
  roles:
    - role: layer2_rhel
      tags: [ 'layer3', 'cf', 'rhel']
      mode: destroy
      when: vm_exists is defined and vm_exists == true
    - role: layerX_dns
      tags: [ 'layer2', 'cf', 'vm','dnat' ]
      mode: destroy

- hosts: cf-rhv-vm-group
  gather_facts: false
  remote_user: root
  roles:
    - role: layer3_vm_on_rhev
      tags: [ 'layer2', 'cf', 'vm' ]
      mode: destroy
      when: cf_is_deployed_on == 'rhv' and vm_exists is defined and vm_exists == true
    - role: layer3_cloudforms_rhev_template
      tags: [ 'layer3', 'cf', 'cf-template' ]
      mode: destroy
      when: cf_is_deployed_on == 'rhv'

- hosts: cf-osp-vm-group
  gather_facts: false
  remote_user: root
  roles:
    - role: layer3_vm_on_openstack
      tags: [ 'layer2', 'cf', 'vm' ]
      mode: destroy
      when: cf_is_deployed_on == 'osp' and vm_exists is defined and vm_exists == true

#### END CLOUDFORMS


#### BEGIN OPENSHIFT

- hosts: ocp-l2-vm-group
  gather_facts: false
  remote_user: root
  roles:
    - role: layer2_vms
      tags: [ 'layer2', 'ocp', 'vm' ]
      mode: start
      when: ocp_is_deployed_on == 'baremetal'

- hosts: ocp-rhv-vm-group
  gather_facts: false
  remote_user: root
  roles:
    - role: layer3_vm_on_rhev
      tags: [ 'layer3', 'ocp', 'vm']
      mode: start
      when: ocp_is_deployed_on == 'rhv'

- hosts: ocp-osp-vm-group
  gather_facts: false
  remote_user: root
  roles:
    - role: layer3_vm_on_openstack
      tags: [ 'layer2', 'ocp', 'vm' ]
      mode: start
      when: ocp_is_deployed_on == 'osp'

- hosts: ocp-installer-group
  remote_user: root
  gather_facts: false
  roles:
    - role: layerX_openshift_demo_monster
      tags: ['ose3-demo','ose3-content', 'content']
      mode: destroy
      when: vm_exists is defined and vm_exists == true
    - role: layerX_openshift_demo_wordpress
      tags: ['ose3-demo', 'ose3-content', 'content', 'ose3-demo-wordpress']
      mode: destroy
      when: vm_exists is defined and vm_exists == true
    - role: layerX_openshift_devops_tools
      tags: ['ose3-devops', 'ose3-content','content']
      mode: destroy
      when: vm_exists is defined and vm_exists == true
    - role: layerX_openshift_deploy
      tags: ['ose3-metrics', 'ose3-roles', 'ose3-content', 'content']
      mode: destroy
      when: vm_exists is defined and vm_exists == true
    - role: layer2_rhsso_client
      tags: ['layer2', 'ose3', 'ose3-oidc']
      mode: destroy
      oidcClientName: 'ocp-master'
    - role: layerX_dns
      tags: [ 'layer2', 'cf', 'vm','dnat' ]
      mode: destroy

- hosts: ocp-l2-vm-group
  gather_facts: false
  remote_user: root
  roles:
    - role: layer2_vms
      tags: [ 'layer2', 'ocp', 'vm' ]
      mode: destroy
      when: ocp_is_deployed_on == 'baremetal' and vm_exists is defined and vm_exists == true

- hosts: ocp-rhv-vm-group
  gather_facts: false
  remote_user: root
  roles:
    - role: layer3_vm_on_rhev
      tags: [ 'layer3', 'ocp', 'vm']
      mode: destroy
      when: ocp_is_deployed_on == 'rhv' and vm_exists is defined and vm_exists == true

- hosts: ocp-osp-vm-group
  gather_facts: false
  remote_user: root
  roles:
    - role: layer3_vm_on_openstack
      tags: [ 'layer2', 'ocp', 'vm' ]
      mode: destroy
      when: ocp_is_deployed_on == 'osp' and vm_exists is defined and vm_exists == true

- hosts: ocp-osp-lbaas-group
  gather_facts: false
  remote_user: root
  roles:
    - role: layer3_lbaas_on_openstack
      tags: [ 'layer3', 'ocp', 'ocp-osp','ocp-osp-lb' ]
      mode: destroy
      when: ocp_is_deployed_on == 'osp'

#### END OPENSHIFT


#### BEGIN RH SSO

- hosts: rh-sso-l2-vm-group
  gather_facts: false
  remote_user: root
  roles:
    - role: layer2_vms
      tags: [ 'layer2', 'rhsso', 'vm', 'rhsso-install' ]
      mode: start
      when: rhsso_is_deployed_on == 'baremetal'

- hosts: rh-sso-rhv-vm-group
  gather_facts: false
  remote_user: root
  roles:
    - role: layer3_vm_on_rhev
      tags: [ 'layer2', 'rhsso', 'vm', 'rhsso-install' ]
      mode: start
      when: rhsso_is_deployed_on == 'rhv'

- hosts: rh-sso-osp-vm-group
  gather_facts: false
  remote_user: root
  roles:
    - role: layer3_vm_on_openstack
      tags: [ 'layer2', 'rhsso', 'vm', 'rhsso-install' ]
      mode: start
      when: rhsso_is_deployed_on == 'osp'

- hosts: rh-sso-group
  gather_facts: false
  remote_user: root
  roles:
    - role: layer2_rhsso
      tags: [ 'layer2', 'rhsso', 'rhsso-install' ]
      mode: destroy
      when: vm_exists is defined and vm_exists == true
    - role: layerX_ipa_client
      tags: [ 'layer2', 'rhsso', 'ipa-client' ]
      mode: destroy
      when: vm_exists is defined and vm_exists == true
    - role: layer2_rhel
      tags: [ 'layer2', 'rhsso', 'rhel' ]
      mode: destroy
      when: vm_exists is defined and vm_exists == true
    - role: layerX_dns
      tags: [ 'layer2', 'rhsso', 'vm','dnat' ]
      mode: destroy

- hosts: rh-sso-l2-vm-group
  gather_facts: false
  remote_user: root
  roles:
    - role: layer2_vms
      tags: [ 'layer2', 'rhsso', 'vm', 'rhsso-install' ]
      mode: destroy
      when: rhsso_is_deployed_on == 'baremetal' and vm_exists is defined and vm_exists == true

- hosts: rh-sso-rhv-vm-group
  gather_facts: false
  remote_user: root
  roles:
    - role: layer3_vm_on_rhev
      tags: [ 'layer3', 'rhsso', 'vm', 'rhsso-install' ]
      mode: destroy
      when: rhsso_is_deployed_on == 'rhv' and vm_exists is defined and vm_exists == true

- hosts: rh-sso-osp-vm-group
  gather_facts: false
  remote_user: root
  roles:
    - role: layer3_vm_on_openstack
      tags: [ 'layer3', 'rhsso', 'vm', 'rhsso-install' ]
      mode: destroy
      when: rhsso_is_deployed_on == 'osp' and vm_exists is defined and vm_exists == true

#### END RH SSO


#### BEGIN RHV

# - hosts: rhvm-group
#   remote_user: root
#   gather_facts: false
#   roles:
#     - { role: layer2_rhel_version_switch, tags: [ 'layer2', 'rhev', 'rhel' ], mode: destroy }

- hosts: rhv-group
  gather_facts: false
  remote_user: root
  roles:
    - role: layer2_vms
      tags: [ 'layer2','rhev', 'rhel' ]
      mode: start

- hosts: rhvm-group
  remote_user: root
  gather_facts: false
  roles:
    - role: layer2_tdagent
      tags: [ 'layer2', 'rhev', 'tdagent','content' ]
      mode: destroy
      when: vm_exists is defined and vm_exists == true
    - role: layer2_rhevm_ldap
      tags: [ 'rhevm-ldap','rhev', 'content' ]
      mode: destroy
      when: vm_exists is defined and vm_exists == true

- hosts: rhv-group
  gather_facts: false
  remote_user: root
  roles:
    - role: layer2_rhel
      tags: [ 'layer2','rhev', 'rhel' ]
      mode: destroy
      when: vm_exists is defined and vm_exists == true
    - role: layer2_vms
      tags: [ 'layer2','rhev', 'vm' ]
      mode: destroy

#### END RHV


#### BEGIN OPENSTACK+CEPH

- hosts: overcloud-director-group
  gather_facts: false
  remote_user: root
  roles:
    - role: layer2_vms
      tags: [ 'layer2','rhosp', 'rhel','overcloud' ]
      mode: start
    - role: layer2_rhosp_overcloud_deploy
      tags: [ 'layer2', 'rhosp', 'overcloud' ]
      mode: destroy
      when: vm_exists is defined and vm_exists == true
    - role: layer2_rhosp_director
      tags: [ 'layer2', 'rhosp', 'undercloud' ]
      mode: destroy
    - role: layer2_rhel
      tags: [ 'layer2','rhosp', 'rhel'  ]
      mode: destroy
      when: vm_exists is defined and vm_exists == true

- hosts: overcloud2-director-group
  gather_facts: false
  remote_user: root
  roles:
    - role: layer2_vms
      tags: [ 'layer2','rhosp', 'rhel','overcloud2' ]
      mode: start
    - role: layer2_rhosp_overcloud_deploy
      tags: [ 'layer2', 'rhosp', 'overcloud2' ]
      mode: destroy
      when: vm_exists is defined and vm_exists == true
    - role: layer2_rhosp_director
      tags: [ 'layer2', 'rhosp', 'undercloud2' ]
      mode: destroy
    - role: layer2_rhel
      tags: [ 'layer2','rhosp', 'rhel'  ]
      mode: destroy
      when: vm_exists is defined and vm_exists == true

- hosts: rhosp-all-group
  gather_facts: false
  remote_user: root
  roles:
    - role: layer2_vms
      tags: [ 'layer2','rhosp', 'vm' ]
      mode: destroy

#### END OPENSTACK+CEPH


#### BEGIN TOWER

- hosts: tower-group
  gather_facts: false
  remote_user: root
  roles:
    - role: layer2_vms
      tags: [ 'layer2','tower', 'rhel' ]
      mode: start
    - role: layer2_ansibletower_l3inventory
      tags: [ 'layer2', 'tower', 'tower-inventory', 'tower-inventory-l3' ]
      mode: destroy
      inventoryname: "Hailstorm L3 OSP"
      when: vm_exists is defined and vm_exists == true
    - role: layer2_ansibletower_l3inventory
      tags: [ 'layer2', 'tower', 'tower-inventory', 'tower-inventory-l3' ]
      mode: destroy
      inventoryname: "Hailstorm L3 RHEV"
      when: vm_exists is defined and vm_exists == true
    - role: layer2_ansibletower_l2inventory
      tags: [ 'layer2', 'tower', 'tower-inventory', 'tower-inventory-l2' ]
      mode: destroy
      inventoryname: "Hailstorm L2"
      when: vm_exists is defined and vm_exists == true
    - role: layer2_ansibletower
      tags: [ 'layer2', 'tower' ]
      mode: destroy
      when: vm_exists is defined and vm_exists == true
    - role: layer2_rhel
      tags: [ 'layer2','tower', 'rhel' ]
      mode: destroy
      when: vm_exists is defined and vm_exists == true
    - role: layer2_vms
      tags: [ 'layer2','tower', 'vm' ]
      mode: destroy

#### END TOWER

#### BEGIN CEPH STANDALONE

- hosts: storage-console-group
  gather_facts: false
  remote_user: root
  roles:
    - role: layer2_vms
      tags: [ 'layer2','storage-console', 'rhel' ]
      mode: start
    - role: layer2_rhel
      tags: [ 'layer2','storage-console', 'rhel' ]
      mode: destroy
      when: vm_exists is defined and vm_exists == true
    - role: layer2_vms
      tags: [ 'layer2','storage-console', 'vm' ]
      mode: destroy
- hosts: layer1
  remote_user: root
  gather_facts: false
  roles:
    - { role: layer1_ceph_inventory, tags: [ 'layer2', 'ceph' ] }

- hosts: ceph-group
  gather_facts: false
  remote_user: root
  roles:
    - role: layer2_vms
      tags: [ 'layer2','ceph', 'rhel' ]
      mode: start
- hosts: ceph-installer-group
  remote_user: root
  gather_facts: false
  roles:
    - role: layer2_ceph_installer
      tags: [ 'layer2', 'ceph', 'ceph-install', 'ceph-installer' ]
      mode: destroy
- hosts: ceph-group
  gather_facts: false
  remote_user: root
  roles:
    - role: layer2_rhel
      tags: [ 'layer2','ceph', 'rhel' ]
      mode: destroy
      when: vm_exists is defined and vm_exists == true
    - role: layer2_vms
      tags: [ 'layer2','ceph', 'vm' ]
      mode: destroy

#### END CEPH STANDALONE


#### BEGIN EFK

- hosts: efk-group
  gather_facts: false
  remote_user: root
  roles:
    - role: layer2_vms
      tags: [ 'layer2','efk', 'rhel' ]
      mode: start
    - role: layer2_rhel
      tags: [ 'layer2','efk', 'rhel' ]
      mode: destroy
      when: vm_exists is defined and vm_exists == true
    - role: layer2_vms
      tags: [ 'layer2','efk', 'vm' ]
      mode: destroy
      when: vm_exists is defined and vm_exists == true

#### END EFK


#### BEGIN INFRASTRUCTURE

- hosts: infrastructure-group
  gather_facts: false
  remote_user: root
  roles:
    - role: layer2_vms
      tags: [ 'layer2','infrastructure', 'vm' ]
      mode: start
    - role: layer2_rhel
      tags: [ 'layer2','infrastructure', 'rhel' ]
      mode: destroy
      when: vm_exists is defined and vm_exists == true
    - role: layer2_vms
      tags: [ 'layer2','infrastructure', 'vm' ]
      mode: destroy

#### END INFRASTRUCTURE

#### BEGIN INSTALL-HOST

- hosts: install-host-group
  gather_facts: false
  remote_user: root
  roles:
    - role: layer2_vms
      tags: [ 'layer2','install-host', 'vm' ]
      mode: start
    - role: layer2_nuage
      tags: [ 'layer2', 'nuage' ]
      mode: destroy
    - role: layer2_installhost
      tags: [ 'layer2', 'install-host' ]
      mode: destroy
      when: vm_exists is defined and vm_exists == true
    - role: layerX_ipa_client
      tags: [ 'layer2','install-host', 'ipa-client' ]
      mode: destroy
      when: vm_exists is defined and vm_exists == true
    - role: layer2_rhel
      tags: [ 'layer2','install-host', 'rhel' ]
      mode: destroy
      when: vm_exists is defined and vm_exists == true
    - role: layer2_vms
      tags: [ 'layer2','install-host', 'vm' ]
      mode: destroy

#### END INSTALL-HOST

#### BEGIN IPA

- hosts: ipa-group
  gather_facts: false
  remote_user: root
  roles:
    - role: layer2_vms
      tags: [ 'layer2','ipa', 'rhel' ]
      mode: start
    - role: layer2_ipa
      tags: [ 'layer2', 'ipa' ]
      mode: destroy
      when: vm_exists is defined and vm_exists == true
    - role: layer2_rhel
      tags: [ 'layer2','ipa', 'rhel' ]
      mode: destroy
      when: vm_exists is defined and vm_exists == true
    - role: layer2_vms
      tags: [ 'layer2','ipa', 'vm' ]
      mode: destroy

#### END IPA

#### BEGIN SATELLITE

- hosts: satellite-group
  gather_facts: false
  remote_user: root
  roles:
    - role: layer2_vms
      tags: [ 'layer2','satellite', 'rhel' ]
      mode: start
      when: destroy_satellite is defined and destroy_satellite
    - role: layer2_vms
      tags: [ 'layer2','satellite', 'rhel' ]
      mode: start
      when: destroy_satellite is defined and destroy_satellite
    - role: layer2_rhel
      tags: [ 'layer2','satellite', 'rhel'  ]
      mode: destroy
      when: destroy_satellite is defined and destroy_satellite
    - role: layer2_vms
      tags: [ 'layer2','satellite', 'vm' ]
      mode: destroy
      when: destroy_satellite is defined and destroy_satellite

#### END SATELLITE

#### BEGIN PROXY

- hosts: proxy-group
  gather_facts: false
  remote_user: root
  roles:
    - role: layer2_vms
      tags: [ 'layer2','proxy', 'vm' ]
      mode: start
    - role: layer2_installhost
      tags: [ 'layer2', 'proxy' ]
      mode: destroy
      when: vm_exists is defined and vm_exists == true
    - role: layerX_ipa_client
      tags: [ 'layer2','proxy', 'ipa-client' ]
      mode: destroy
      when: vm_exists is defined and vm_exists == true
    - role: layer2_rhel
      tags: [ 'layer2','proxy', 'rhel' ]
      mode: destroy
      when: vm_exists is defined and vm_exists == true
    - role: layer2_vms
      tags: [ 'layer2','proxy', 'vm' ]
      mode: destroy

#### END PROXY

- hosts: layer1-group
  gather_facts: false
  remote_user: root
  roles:
    - role: layer1_openshift
      tags: [ 'layer1', 'ose3' ]
      mode: destroy
    - role: layer1_rhev
      tags: [ 'layer1', 'rhev' ]
      mode: destroy
    - role: layer1_rhosp
      tags: [ 'layer1', 'rhosp' ]
      mode: destroy
      group: rhosp-all-group
    - role: layer1_dnat
      tags: [ 'layer1', 'dnat' ]
      mode: destroy
    - role: layer1
      tags: [ 'layer1' ]
      mode: destroy
