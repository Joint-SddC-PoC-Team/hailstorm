---
# --- FOR OPENSHIFT ON LAYER2 ("BARE METAL") ---
- hosts: ocp-l2-vm-group
  remote_user: root
  gather_facts: false
  roles:
    - role: layer2_vms
      tags: [ 'layer2', 'ocp', 'ocp-l2', 'vm', 'ocp-vm']
      mode: create
      when: ocp_is_deployed_on == 'baremetal'

# --- FOR OPENSHIFT ON OSP ---
# - hosts: rhosp-director
#   remote_user: root
#   gather_facts: false
#   roles:
#     - role: layer2_rhosp_overcloud_security
#       tags: ['layer3', 'rhosp', 'overcloud', 'overcloud-security', 'ocp', 'ocp-osp', 'ocp-vm']
#       mode: create
#       when: ocp_is_deployed_on == 'osp'

# instantiate VMs
- hosts: ocp-osp-vm-group
  remote_user: root
  gather_facts: false
  roles:
    - role: layer3_vm_on_openstack
      tags: [ 'layer3', 'ocp', 'ocp-osp', 'ocp-vm', 'vm','dnat' ]
      mode: create
      when: ocp_is_deployed_on == 'osp'

# instantiate LBaaS
- hosts: ocp-osp-lbaas-group
  gather_facts: false
  remote_user: root
  roles:
    - role: layer3_lbaas_on_openstack
      tags: [ 'layer3', 'ocp-osp', 'ocp-osp-install', 'ocp-vm', 'ocp-osp-lb', 'dnat' ]
      mode: create
      when: ocp_is_deployed_on == 'osp'

- hosts: ocp-osp-lbaas-group,ocp-osp-vm-group
  gather_facts: false
  remote_user: root
  roles:
    - role: layerX_dns
      tags: [ 'layer3', 'ocp', 'ocp-osp', 'ocp-vm', 'ocp-osp-lb', 'vm','dnat' ]
      mode: update_floating_ip
      when: ocp_is_deployed_on == 'osp'

# write VM+LBaaS tenant IPs to /etc/hosts
- hosts: ocp-osp-vm-group
  remote_user: root
  gather_facts: false
  roles:
    - role: layer3_vm_on_openstack_etc_hosts_internal_ips
      tags: [ 'layer3', 'ocp', 'ocp-osp', 'vm', 'ocp-vm', 'etc-hosts' ]
      mode: create
      group: "{{ groups['ocp-osp-vm-group']+groups['ocp-osp-lbaas-group']Â }}"
      when: ocp_is_deployed_on == 'osp'
    - role: layerX_etc_hosts
      tags: [ 'layer3', 'ocp', 'ocp-osp', 'etc-hosts' ]
      mode: create
      hosts:
        - satellite
        - ipa
        - openstack
      when: ocp_is_deployed_on == 'osp'

# # write floatign IPs to DNAT DNS
# - hosts: infrastructure
#   remote_user: root
#   gather_facts: false
#   roles:
#    - role: layer2_dnat_dns
#      tags: [ 'layer3', 'ocp-osp', 'dnat' , 'ocp-vm']
#      mode: floating_ip
#      group: "{{ groups['ocp-osp-lbaas-group'] }}"
#      when: ocp_is_deployed_on == 'osp'

# register wildcard hosts with floating IPs in IPA
- hosts: ipa
  remote_user: root
  gather_facts: false
  roles:
   - role: layer2_ipa_add_host_to_wildcard_ca_acl
     tags: [ 'layer3', 'ocp-osp', 'vm', 'dns', 'ocp-vm']
     mode: create
     group: "{{ groups['ocp-osp-lbaas-group'] }}"
     when: ocp_is_deployed_on == 'osp'


# --- FOR OPENSHIFT ON RHV ---
- hosts: ocp-rhv-vm-group
  remote_user: root
  gather_facts: false
  roles:
    - role: layer3_vm_on_rhev
      tags: [ 'layer3', 'ocp', 'ocp-rhv', 'vm', 'ocp-vm']
      mode: create
      when: ocp_is_deployed_on == 'rhv'
    - role: layerX_dns
      tags: [ 'layer3', 'ocp', 'ocp-rhv', 'vm','dnat' ]
      mode: update_services_network
      when: ocp_is_deployed_on == 'rhv'

# --- FOR OPENSHIFT ON EITHER LAYER2 OR OSP ---
- hosts: ocp-osp-bastion-group,ocp-master-group,ocp-node-group,ocp-l2-or-rhv-lb-group
  remote_user: root
  gather_facts: false
  roles:
    - { role: layer2_rhel_reconfigure_dns, tags: [ 'layer3', 'ocp', 'dns', 'ocp-prep' ], mode: create, nameserver: "{{ (hostvars['ipa']|selectattr('netname','match', infrastructure_network_services.netname)|first).ip }}" }
    - { role: layer2_rhel, tags: [ 'layer3', 'ocp', 'rhel', 'ocp-prep'  ], mode: create }
    - { role: layerX_ipa_client, tags: [ 'layer3', 'ocp',  'ipa-client', 'ocp-prep' ], mode: create }
    - { role: layerX_distribute_pubkey, tags: [ 'layer3', 'ocp', 'ocp-installprep' , 'ocp-prep' ], mode: create, pubkeyhost: "{{ groups['ocp-installer-group']|first }}" }

- hosts: ocp-master-group,ocp-node-group
  remote_user: root
  gather_facts: false
  roles:
    - { role: layerX_openshift_osp_node, tags: [ 'layer3', 'ocp', 'ocp-node', 'ocp-prep' ], mode: create }


# reread OSP VM facts, in case we skipped with ocp-vm/ocp-prep
# reread rhsso vm facts, in case it is running on osp
- hosts: ocp-osp-vm-group,rh-sso-osp-vm-group
  remote_user: root
  gather_facts: false
  roles:
    - role: layer3_vm_on_openstack
      tags: [ 'layer3', 'ocp', 'ocp-osp' ]
      mode: readfacts

- hosts: ocp-installer-group
  remote_user: root
  gather_facts: false
  roles:
    - { role: layer2_ipa_certificate, tags: ['layer3', 'ocp', 'ocp-install', 'ocp-roles'], mode: create, certcn: 'openshift.{{ hailstorm_dns_domain }}', factprefix: openshift }
    - { role: layer2_rhsso_client, tags: ['layer3', 'ocp', 'ocp-install', 'ocp-oidc'], mode: create, oidcClientName: 'ocp-master',  oidcRedirect: 'https://openshift.{{ hailstorm_dns_domain }}/*', factprefix: ocpOidcClient }
    - { role: layerX_openshift_deploy, tags: [ 'layer3', 'ocp', 'ocp-install', 'ocp-metrics', 'ocp-roles' ], mode: create }
    - { role: layer2_ipa_certificate, tags: ['layer3', 'ocp', 'ocp-install', 'ocp-logging-certificate'], mode: create, certcn: 'kibana.{{ ocp_apps_dns_domain }}' }
    - { role: layerX_openshift_route_certificate, tags: ['layer3', 'ocp', 'ocp-install', 'ocp-logging-certificate'], mode: create, route: "logging-kibana", namespace: "logging" }
    - { role: layer2_ipa_certificate, tags: ['layer3', 'ocp', 'ocp-install', 'ocp-metrics-certificate'], mode: create, certcn: 'hawkular-metrics.{{ ocp_apps_dns_domain }}' }
    - { role: layerX_openshift_route_certificate, tags: ['layer3', 'ocp', 'ocp-install', 'ocp-metrics-certificate'], mode: create, route: "hawkular-metrics", namespace: "openshift-infra" }
    - { role: layer2_ipa_certificate, tags: ['layer3', 'ocp', 'ocp-install', 'ocp-router-certificate'], mode: create, certcn: '{{ ocp_apps_dns_domain }}', wildcard: true, factprefix: wildcard }
    - { role: layerX_openshift_router_wildcardcertificate, tags: ['layer3', 'ocp', 'ocp-install', 'ocp-router-certificate'], mode: create }
#    - { role: layerX_openshift_devops_tools, tags: [layer3, 'ocp', 'ocp-devops'], mode: create }

### convenience - add redirect to https if user access http endpoint (on l2 lb or on OSP master)
- hosts: ocp-l2-or-rhv-lb-group
  remote_user: root
  gather_facts: false
  roles:
   - role: layerX_openshift_redirect_to_https
     tags: [ 'layer3', 'ocp', 'ocp-install','ocp-lb' ]
     mode: create

- hosts: ocp-master-group
  remote_user: root
  gather_facts: false
  roles:
  - role: layerX_openshift_redirect_to_https
    tags: [ 'layer3', 'ocp', 'ocp-install','ocp-lb' ]
    mode: create
    when: cf_is_deployed_on == 'osp'


# - hosts: infrastructure
#   remote_user: root
#   gather_facts: false
#   roles:
#      - { role: layer2_dnat_dns, tags: [ 'layer3', 'ocp-osp', 'dns', 'ocp-osp-lb' ], mode: lbaas_ip, lbdnsname: ['openshift-osp','apps', '*.apps'], lbip: "{{ lbaas_fip }}" }
#
#
# - hosts: ipa
#   remote_user: root
#   gather_facts: false
#   roles:
#      - { role: layer2_ipa_add_host_to_wildcard_ca_acl, tags: [ 'layer3', 'ocp', 'dns', 'ocp-lb' ], mode: create_fip, lbdnsname: "*.apps,apps", lbip: "{{ hostvars['infrastructure']['lbaas_fip'] }}" }
