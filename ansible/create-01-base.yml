---
- hosts: all
  remote_user: root
  gather_facts: false
  tasks:
    - set_fact:
        rhsm_username: "{{ rhsm_username }}"
        rhsm_password: "{{ rhsm_password }}"
      tags:
        - always
    - debug: var=vm_nics
      tags:
        - always
    # - debug: msg={{ vm_nics }}
    #   tags:
    #     - always

  vars_prompt:
    - name: "rhsm_username"
      prompt: "what is your Red Hat Subscription Manager username?"
      default: "wrichter"
      private: no
    - name: "rhsm_password"
      prompt: "what is your Red Hat Subscription Manager password?"
      private: yes

- hosts: layer1-group
  remote_user: root
  gather_facts: false
  pre_tasks:
    - setup:
      tags: [ 'layer1', 'rhosp', 'rhev', 'ose3', 'dnat', 'layer1-dnat' ]
  roles:
    - role: layer1
      tags: [ 'layer1' ]
      mode: create
    - role: layer1_dnat
      tags: [ 'layer1', 'dnat', 'layer1-dnat' ]
      mode: create
      when: >
        external_network_config is defined
        and
        (infrastructure_network_master is not defined or infrastructure_network_master == layer1_ansible_host)
    # - role: layer1_etc_hosts
    #   mode: create
    #   tags: [ 'layer1', 'layer1-etc-hosts' ]
    - role: layer1_ceph_inventory
      tags: [ 'layer2', 'ceph', 'ipa' ]
      when: current_lifecycle_env.osp_storage_backend == "ceph_ownvms"
    - role: layer1_nuage
      mode: create
      tags: [ 'layer1', 'nuage' ]

#### SATELLITE ####

- hosts: satellite-group
  remote_user: root
  gather_facts: false
  roles:
    - { role: layer2_vms, tags: [ 'layer2', 'satellite', 'vm', 'satellite-vm' ], mode: create }
    - { role: layer2_rhel, tags: [ 'layer2','satellite', 'rhel','satellite-rhel' ], mode: create }
    - { role: layer2_satellite, tags: [ 'layer2','satellite' ], mode: create }

#### IPA ####

- hosts: ipa-group
  remote_user: root
  gather_facts: false
  roles:
    - { role: layer2_vms, tags: [ 'layer2', 'ipa', 'vm', 'ipa-vm' ], mode: create }
    - { role: layer2_ipa_etc_hosts, tags: [ 'layer2', 'ipa', 'rhel', 'ipa-rhel' ], mode: create }
    - { role: layer2_rhel, tags: [ 'layer2', 'ipa', 'rhel', 'ipa-rhel' ], mode: create }
    - { role: layer2_ipa_etc_hosts, tags: [ 'layer2', 'ipa', 'rhel', 'ipa-rhel' ], mode: destroy }
    - { role: layer2_ipa_openssl_ca, tags: [ 'layer2', 'ipa', 'ca', 'rootca' ], mode: create, ca_name: "rootca" }
    - { role: layer2_ipa_openssl_ca, tags: [ 'layer2', 'ipa', 'ca', 'alienca' ], mode: create, ca_name: "alienca" }
# DFR: Preparation for HSRACKDEV-358 Constant Root CA - work in progress currently disabled:
#    - { role: layer2_ipa, tags: [ 'layer2', 'ipa' ], mode: create-csr }
#    - { role: layer2_ipa_openssl_ca, tags: [ 'layer2', 'ipa', 'rootca' ], mode: signcertreq, csr_name: "ipa",csr_req: "???" , factprefix: ipaCert  }
#    - { role: layer2_ipa, tags: [ 'layer2', 'ipa' ], mode: create }
    - { role: layer2_ipa, tags: [ 'layer2', 'ipa' ], mode: create }
    - { role: layer2_tdagent, tags: [ 'layer2', 'ipa', 'tdagent', 'ipa-tdagent'], mode: create }
    - role: layerX_dns
      tags: [ 'layer2', 'satellite', 'dns', 'dnsupdate', 'dnat' ]
      mode: update_services_network
      skip_dnat_dns: True


#### SATELLITE (again) ####

- hosts: satellite-group
  remote_user: root
  gather_facts: false
  #pre_tasks:
  #  - setup:
  #    tags: [ 'layer2','satellite' ]
  roles:
    - role: layerX_dns
      tags: [ 'layer2', 'satellite', 'dns', 'dnsupdate', 'dnat' ]
      mode: update_services_network
      skip_dnat_dns: True
    - { role: layer2_rhel_reconfigure_dns, tags: [ 'layer2', 'satellite', 'dns', 'satellite-dns' ], mode: create, nameserver: "{{ hostvars['ipa'].vm_nics[0].ip }}" }
#   - { role: layer2_tdagent, tags: [ 'layer2', 'satellite', 'tdagent', 'satellite-tdagent' ], mode: create }
#   - { role: layer2_ipa_certificate, tags: ['layer2', 'satellite', 'satellite_cert'], mode: create }
#   - { role: layer2_satellite_certificate, tags: ['layer2', 'satellite', 'satellite_cert'], mode: create }

# - hosts: ipa
#   remote_user: root
#   gather_facts: false
#   roles:
#     - { role: layer2_rhel, tags: [ 'layer2', 'ipa', 'satellite_cert' ], mode: refreshcert }


- hosts: proxy-group
  remote_user: root
  gather_facts: false
  roles:
     - { role: layer2_vms, tags: [ 'layer2', 'proxy', 'vm' ], mode: create }
     - role: layerX_dns
       tags: [ 'layer2', 'proxy', 'dns', 'dnsupdate', 'dnat' ]
       mode: update_services_network
       skip_dnat_dns: True
     - { role: layer2_rhel_reconfigure_dns, tags: [ 'layer2', 'proxy', 'dns' ], mode: create, nameserver: "{{ hostvars['ipa'].vm_nics[0].ip }}" }
     - { role: layer2_rhel, tags: [ 'layer2', 'proxy', 'rhel' ], mode: create }
    ### proxy should be neither IPA client nor syslog client since it is not part of the system itself, but system context
    #  - { role: layerX_ipa_client, tags: [ 'layer2', 'proxy',  'ipa-client'], mode: create }
    #  - { role: layerX_syslog_client, tags: [ 'layer2', 'proxy', 'syslog',  'syslog-client'], mode: create }
     - { role: layer2_proxy, tags: [ 'layer2', 'proxy', 'proxy-config' ], mode: create }


 #### install-host
 # ansible-playbook -i hosts -e @config/infrastructure_config.yml -e @config/hailstorm_config.yml -e @config/storm3.coe.muc.redhat.com.yml create-01-base.yml --tags install-host
- hosts: install-host-group
  remote_user: root
  gather_facts: false
  roles:
    - { role: layer2_vms, tags: [ 'layer2', 'install-host', 'vm' ], mode: create }
    - role: layerX_dns
      tags: [ 'layer2', 'install-host', 'dns', 'dnsupdate', 'dnat' ]
      mode: update_services_network
      skip_dnat_dns: True
    - { role: layer2_rhel_reconfigure_dns, tags: [ 'layer2', 'install-host', 'dns' ], mode: create, nameserver: "{{ hostvars['ipa'].vm_nics[0].ip }}" }
    - { role: layer2_rhel, tags: [ 'layer2', 'install-host', 'rhel' ], mode: create }
    - { role: layerX_ipa_client, tags: [ 'layer2', 'install-host',  'ipa-client' ], mode: create }
    - role: layerX_proxy_client
      tags: [ 'layer2', 'install-host', 'proxy-client' ]
      mode: create
    - { role: layer2_installhost, tags: [ 'layer2', 'install-host' ], mode: create }
    #EXAMPLE: - { role: layerX_splunk_client, tags: ['layer2', 'install-host', 'splunk-client'], mode: create, splunk_agent_server: "10.116.127.101", splunk_agent_port: 8889, splunk_agent_user: "admin", splunk_agent_password: "changeme"  }
