---
- hosts: rh-sso-osp-vm-group
  remote_user: root
  gather_facts: false
  roles:
    - role: layer3_vm_on_openstack
      tags: [ 'layer3', 'cf', 'vm', 'cf-vm', 'dnat' ]
      mode: readfacts
      when: rhsso_is_deployed_on == 'osp'
- hosts: cf-osp-vm-group
  remote_user: root
  gather_facts: false
  roles:
    - role: layer3_vm_on_openstack
      tags: [ 'layer3', 'cf', 'vm', 'cf-vm', 'dnat' ]
      mode: create
      when: cf_is_deployed_on == 'osp'
    # - role: layerX_etc_hosts
    #   tags: [ 'layer3', 'cf', 'vm', 'cf-vm', 'etc-hosts' ]
    #   mode: create
    #   hosts:
    #     - satellite
    #     - ipa
    #     - rh-sso
    #     - openstack
    #     - rhosp-director
    #   when: cf_is_deployed_on == 'osp'
    - role: layerX_dns
      tags: [ 'layer3', 'cf', 'vm', 'cf-vm', 'dnat', 'cf-provider', 'cf-provider-rhev', 'cf-provider-ocp', 'cf-provider-osp' ]
      mode: update_floating_ip
      when: cf_is_deployed_on == 'osp'
    - role: layer3_vm_on_openstack_etc_hosts_internal_ips
      tags: [ 'layer3', 'cf', 'vm', 'cf-vm', 'dnat' ]
      mode: create
      group: "{{ groups['cloudforms-group']Â }}"
      when: cf_is_deployed_on == 'osp'

# - hosts: infrastructure
#   remote_user: root
#   gather_facts: false
#   roles:
#     - role: layer2_dnat_dns
#       tags: [ 'layer3', 'ose3-osp', 'dnat' ]
#       mode: floating_ip
#       group: "{{ groups['cloudforms-group'] }}"
#       when: cf_is_deployed_on == 'osp'

- hosts: cf-rhv-vm-group
  remote_user: root
  gather_facts: false
  roles:
    - role: layer3_vm_on_rhev
      tags: [ 'layer3', 'cf', 'vm', 'cf-vm', 'dnat', 'cf-provider', 'cf-provider-rhev', 'cf-provider-ocp', 'cf-provider-osp' ]
      mode: create
      when: cf_is_deployed_on == 'rhv'
    - role: layer2_rhel_reconfigure_dns
      tags: [ 'layer3', 'cf', 'dns', 'cf-dns' ]
      mode: create
      nameserver: "{{ hostvars['ipa'].vm_nics[0].ip }}"
      when: cf_is_deployed_on == 'rhv'
    - role: layerX_dns
      tags: [ 'layer3', 'cf', 'vm', 'cf-vm', 'dnat', 'cf-provider', 'cf-provider-rhev', 'cf-provider-ocp', 'cf-provider-osp' ]
      mode: update_services_network
      when: cf_is_deployed_on == 'rhv'

- hosts: cf-osp-vm-group
  remote_user: root
  gather_facts: false
  roles:
    - role: layer3_vm_on_openstack
      tags: [ 'layer3', 'cf' ]
      mode: readfacts
      when: cf_is_deployed_on == 'osp'
- hosts: cloudforms-group
  remote_user: root
  gather_facts: false
  roles:
    - { role: layer3_cloudforms_config, tags: [ 'layer3', 'cf', 'cf-config', 'cf-db' ], mode: create }

- hosts: cloudforms-ui
  remote_user: root
  gather_facts: false
  roles:
    - { role: layer2_ipa_certificate, tags: ['layer2', 'cf', 'cf-certificate', 'cf-ui'], mode: create, certcn: 'cloudforms.{{ hailstorm_dns_domain }}' }
    - { role: layer3_cloudforms_certificate, tags: ['layer2', 'cf', 'cf-certificate', 'cf-ui'], mode: create }
    - { role: layer3_cloudforms_saml_config, tags: ['layer2', 'cf', 'cf-saml', 'cf-ui'], mode: create, when: "cf_use_rhsso|default(false,true)" }

- hosts: cloudforms-wk-osp
  remote_user: root
  gather_facts: false
  roles:
    - { role: layer3_cloudforms_osp_provider, tags: [ 'layer3', 'cf', 'cf-provider', 'cf-provider-osp', 'cf-osp' ], mode: create, stack_name: overcloud }

# read floating IP facts of the Openshift VMs into ansible inventory
- hosts: ocp-osp-vm-group
  remote_user: root
  gather_facts: false
  roles:
    - role: layer3_vm_on_openstack
      tags: [ 'layer3', 'cf-provider', 'cf-provider-ocp' ]
      mode: readfacts

- hosts: cloudforms-wk-ocp
  remote_user: root
  gather_facts: false
  roles:
   - { role: layer3_cloudforms_openshift_provider, tags: [ 'layer3', 'cf', 'cf-provider', 'cf-provider-ocp' ], mode: create }

- hosts: cloudforms-wk-rhev
  remote_user: root
  gather_facts: false
  roles:
    - { role: layer3_cloudforms_rhev_provider, tags: [ 'layer3', 'cf', 'cf-provider', 'cf-provider-osp' ], mode: create }

- hosts: cloudforms-group
  remote_user: root
  gather_facts: false
  roles:
  # RHEL after cloudforms config, to ensure the hostname is set before subscribing
    - { role: layer2_rhel, tags: [ 'layer3', 'cf', 'rhel', 'cf-rhel'], mode: create }
    - role: layerX_proxy_client
      tags: [ 'layer2', 'cf', 'proxy-client' ]
      mode: create
    - { role: layer2_tdagent, tags: [ 'layer3', 'cf', 'tdagent', 'cf-tdagent'], mode: create, forward_to_rsyslog: true }
    # - role: layerX_syslog_client
    #   tags: [ 'layer2', 'rhosp', 'syslog',  'syslog-client']
    #   mode: create
    - role: layerX_splunk_client
      tags: [ 'layer2', 'rhosp', 'splunk',  'splunk-client']
      mode: create
