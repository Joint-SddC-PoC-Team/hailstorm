# can be invoked with an activation key or with rhsm_username and rhsm_password
# The intent is as follows:
#   - most systems are subscribed against satellite
#   - only satellite itself needs to register agianst RHN to initiate the process
#   - once satellite is brought up, it unsubscribes from RHN and subscribes against itself
#   - subscriptions are not removed and recreated in the life cylce of a VM,
#     rather they are subscribed at the beginning of their life cycle and
#     unsubscribed at the end of it (i.e. unsubscribe might be messy and leave the system in an inconsistent state)

- name: check if system is targeting RHN or Satellite
  shell: awk '/^hostname =/{print $3}' /etc/rhsm/rhsm.conf
  register: rhsm_target
  changed_when: false
  when: not disable_registration_against_satellite

- name: check if system is registered (either RHN or Satellite)
  shell: subscription-manager status | awk '/^Overall Status/{ print $3 }'
  register: subscription_status
  changed_when: false

# check if activation key is present (= demo builder wants to register against satellite)

# Activation Key is present,
#    system is registered
#       system is targetting RHN
#          unsubscribe from RHN
#          install katello-ca-consumer-latest
#          register system
#       system  is targetting satellite
#          do nothing
#    System is unregistered
#       install katello-ca-consumer-latest
#       register system
# Activation Key is not present
#    system is registered
#        do nothing
#    system is not registered
#        register (against RHN)


- name: unsubscribe (from RHN)
  redhat_subscription: state=absent
  when: (not disable_registration_against_satellite) and activation_key is defined and (subscription_status.stdout == 'Current' or subscription_status.stdout == 'Insufficient') and rhsm_target.stdout != hostvars['satellite'].hostname

- name: add satellite entries to /etc/hosts (for services network)
  lineinfile: dest=/etc/hosts line="{{ item }}"
  with_items:
    - "{{ (hostvars['satellite'].vm_nics|selectattr('netname','match',infrastructure_network_services.netname)|first).ip }} satellite {{ hostvars['satellite'].hostname }}"
  when: infrastructure_network_services.netname in (vm_nics|map(attribute="netname")|list)

- name: add satellite entries to /etc/hosts (for DNAT IP)
  lineinfile: dest=/etc/hosts line="{{ item }}"
  with_items:
    - "{{ (external_network_config.services_network_dnat.mapping|selectattr('expose_machine','match','satellite')|first).on_host_prefix|ipaddr('address') }} satellite {{ hostvars['satellite'].hostname }}"
  when: >
    infrastructure_network_services.netname not in (vm_nics|map(attribute='netname')|list)
    and
    external_network_config is defined
    and
    external_network_config.services_network_dnat.mapping|selectattr('expose_machine','match','satellite')|list|length > 0

- block:

    - name: install katello-ca-consumer-latest
      # yum module can't do localinstall...
      #command: yum -y localinstall http://{{ hostvars['satellite'].hostname }}/pub/katello-ca-consumer-latest.noarch.rpm  creates=/etc/rhsm/rhsm.conf.kat-backup
      yum: state=present name=http://{{ hostvars['satellite'].hostname }}/pub/katello-ca-consumer-latest.noarch.rpm

  when: not disable_registration_against_satellite and activation_key is defined and (rhsm_target.stdout != hostvars['satellite'].hostname or (subscription_status.stdout != 'Current' and subscription_status.stdout != 'Insufficient'))

- block:
    - setup:
    - name: Change hostname to register against satellite if hostname is localhost
      hostname:
        name: "{{inventory_hostname_short }}.{{ hailstorm_dns_domain }}"
      when: ansible_nodename == "localhost.localdomain"
    - name: register system using activation key against satellite
      redhat_subscription:
        state: present
        org_id: "{{ hostvars['satellite'].organization_id }}"
        activationkey: "{{ activation_key }}"
        pool: "{{ pool_regex }}"
        consumer_name: "{{ hostname }}"
      register: rh_sub
      retries: 5
      until: not rh_sub|failed
      delay: 5
    - name: install katello-agent
      yum:
        name: katello-agent
        state: present
        enablerepo: "{{ os_variant_dash }}-server-satellite-tools-{{ satellite_version }}-rpms"
  when: not disable_registration_against_satellite and activation_key is defined

- name: register system using username/pw against RHN
  redhat_subscription:
    state: present
    username: "{{ rhsm_username }}"
    password: "{{ rhsm_password }}"
    pool: "{{ pool_regex }}"
  when: (disable_registration_against_satellite or activation_key is not defined) and subscription_status.stdout != 'Current' and subscription_status.stdout != 'Insufficient'
