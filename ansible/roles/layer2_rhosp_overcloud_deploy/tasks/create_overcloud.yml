- name: check deployed stack
  shell: . ~/stackrc && heat stack-list | grep overcloud
  failed_when: false
  changed_when: false
  register: stack

- block:
    - name: check IPA is available
      wait_for: host={{ inventory_hostname }} port=22 timeout=1
      register: ipa_available

    - name: copy certificate of IPA
      command: "{{ item }}"
      delegate_to: ipa
      register: certificate
      changed_when: false
      failed_when: certificate.stdout == ''
      when: ipa_available|success
      with_items:
        - cat /etc/ipa/ca.crt
        - openssl x509 -in /etc/ipa/ca.crt -outform PEM
  when: stack.stdout == ""

- block:
    - name: Create bin directory
      file: path=~/bin state=directory
    - name: create command binary
      template: src={{ item }}.j2 dest=~/bin/{{ item }} mode=0755
      with_items:
        - deploy-overcloud
        - virsh-names
        - scale-down

    - name: Create templates directory
      file: path=~/templates state=directory
    - name: Create nic-configs directory
      file: path=~/templates/nic-configs state=directory

    - name: create custom install configuration
      template: src={{ item }}.j2 dest=~/templates/{{ item }} mode=0644
      with_items: "{{ templates|select|list }}"

    - name: create nic configs
      template: src={{ item }}{% if nuage is defined %}-nuage{% endif %}.yaml.j2 dest=~/templates/nic-configs/{{ item }}.yaml mode=0644
      with_items:
        - "compute"
        - "controller"

    - debug:
        msg: "Hint: To follow the creation of the Overcloud, login to the director as user stack and run watch_rhosp_creation.sh."
        verbosity: 0
    - debug:
        msg: "Hint: To debug a failed creation use osp-collect.sh on the director as user stack."
        verbosity: 0
    - name: deploy overcloud (even more coffee!)
      shell: >
        . ~/stackrc ; rm ~/deploy_overcloud.log ;
        {{ lookup('template','deploy-overcloud.j2') }} 2>&1 >> ~/deploy_overcloud.log
      tags: ['deploy']
    #   async: 7200
    #   poll: 0
    #   register: deploy_overcloud
    #
    # - name: check on overcloud deploy completed
    #   async_status: jid={{ deploy_overcloud.ansible_job_id }}
    #   register: job_result
    #   until: job_result.finished
    #   retries: 480
    #   delay: 15

  when: stack.stdout == ""
  become: yes
  become_user: "{{ rhosp_stack_user }}"

- name: wait for stack creation to complete
  shell: . ~/stackrc && openstack stack list -f json
  register: stacklist
  until: "'IN_PROGRESS' not in ( stacklist.stdout | from_json )[0]['Stack Status']"
  retries: 720
  delay: 60
  become: yes
  become_user: "{{ rhosp_stack_user }}"
  failed_when: "'FAILED' in ( stacklist.stdout | from_json )[0]['Stack Status']"
  changed_when: false

- name: create ansible inventory as /etc/ansible/hosts
  shell: . ~/stackrc && tripleo-ansible-inventory --static-inventory ansible_hosts && sudo cp ansible_hosts /etc/ansible/hosts
  become: yes
  become_user: "{{ rhosp_stack_user }}"
  changed_when: false
