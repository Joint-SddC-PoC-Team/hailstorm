- name: create instackenv.json
  template: src=instackenv.json.j2 dest=~/instackenv.json mode=0644
  become: yes
  become_user: "{{ rhosp_stack_user }}"
  register: instackenv_json
- block:
    - name: import baremetal nodes to ironic
      shell: . ~/stackrc && openstack baremetal import --json ~/instackenv.json
    - name: configure boot
      shell: . ~/stackrc && openstack baremetal configure boot
    - name: delete ironic flavors
      #https://bugzilla.redhat.com/show_bug.cgi?id=1317312
      #shell: . ~/stackrc && openstack flavor delete {{ item }}
      shell: . ~/stackrc && nova flavor-delete {{ item }}
      ignore_errors: True
      with_items:
        - compute
        - control
        - baremetal
    - name: configure ironic flavor for baremetal (dummy)
      shell: . ~/stackrc && openstack flavor create --id auto --ram 4096 --disk 58 --vcpus 4 baremetal

    - name: configure ironic flavors
      shell: >
        . ~/stackrc && openstack flavor create --id auto
        --ram {{ item.mem }}
        --disk {{ item.disk|int - 2 }}
        --vcpus {{ item.vcpu }}
        {{ item.name }}
      with_items:
        - name: compute
          mem: "{{ hostvars[compute[0]].mem }}"
          disk: "{{ hostvars[compute[0]].disk.size }}"
          vcpu: "{{ hostvars[compute[0]].vcpu }}"
        - name: control
          mem: "{{ hostvars[controller[0]].mem }}"
          disk: "{{ hostvars[controller[0]].disk.size }}"
          vcpu: "{{ hostvars[controller[0]].vcpu }}"
    - name: adapt ironic flavors (and match flavor to node profile)
      shell: >
        . ~/stackrc && openstack flavor set
        --property "cpu_arch"="x86_64"
        --property "capabilities:boot_option"="local"
        --property "capabilities:profile"="{{ item }}"
        {{ item }}
      with_items:
        - compute
        - control
        - baremetal
    - name: discover nodes (more coffee)
      shell: . ~/stackrc &&  openstack baremetal introspection bulk start

    - block:
      # for OSP10+, setting the capabilities is now done in the instackenv.json,
      # therefore not overwriting the introspection results
        - name: update control nodes with flavor / node info
          shell: >
            . ~/stackrc && ironic node-update \
            $(ironic port-show --address {{ hostvars[item.1].vm_nics[0].mac }} |  awk '/node_uuid/{ print $4 }') \
            add properties/capabilities='{% if current_lifecycle_env.osp_controlled_node_placement %}node:control-{{ item.0}},profile:baremetal{% else %}profile:control{% endif %},boot_option:local'
          with_indexed_items: "{{ controller }}"
        - name: update compute nodes with flavor / node info
          shell: >
            . ~/stackrc && ironic node-update \
            $(ironic port-show --address {{ hostvars[item.1].vm_nics[0].mac }} |  awk '/node_uuid/{ print $4 }') \
            add properties/capabilities='{% if current_lifecycle_env.osp_controlled_node_placement %}node:compute-{{ item.0 }},profile:baremetal{% else %}profile:compute{% endif %},boot_option:local'
          with_indexed_items: "{{ compute }}"
      when: current_lifecycle_env.openstack_version <= 9
  when: instackenv_json.changed
  become: yes
  become_user: "{{ rhosp_stack_user }}"

- name: update all nodes with KVM VM name
  shell: >
    . ~/stackrc && ironic node-update \
    $(ironic port-show --address {{ hostvars[item].vm_nics[0].mac }} |  awk '/node_uuid/{ print $4 }') \
    add properties/hailstorm_name='{{ hostvars[item].inventory_hostname_short }}'
  with_items: "{{ compute + controller }}"
