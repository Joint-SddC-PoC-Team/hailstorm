heat_template_version: 2015-04-30

description: >
  Software Config to drive os-net-config to configure multiple interfaces
  for the controller role.

parameters:
  ControlPlaneIp:
    default: ''
    description: IP address/subnet on the ctlplane network
    type: string
  ExternalIpSubnet:
    default: ''
    description: IP address/subnet on the external network
    type: string
  InternalApiIpSubnet:
    default: ''
    description: IP address/subnet on the internal API network
    type: string
  StorageIpSubnet:
    default: ''
    description: IP address/subnet on the storage network
    type: string
  StorageMgmtIpSubnet:
    default: ''
    description: IP address/subnet on the storage mgmt network
    type: string
  TenantIpSubnet:
    default: ''
    description: IP address/subnet on the tenant network
    type: string
  ManagementIpSubnet: # Only populated when including environments/network-management.yaml
    default: ''
    description: IP address/subnet on the management network
    type: string
  ExternalNetworkVlanID:
    default: 10
    description: Vlan ID for the external network traffic.
    type: number
  InternalApiNetworkVlanID:
    default: 20
    description: Vlan ID for the internal_api network traffic.
    type: number
  StorageNetworkVlanID:
    default: 30
    description: Vlan ID for the storage network traffic.
    type: number
  StorageMgmtNetworkVlanID:
    default: 40
    description: Vlan ID for the storage mgmt network traffic.
    type: number
  TenantNetworkVlanID:
    default: 50
    description: Vlan ID for the tenant network traffic.
    type: number
# For RHOSP8 - see https://access.redhat.com/documentation/en/red-hat-openstack-platform/version-8/director-installation-and-usage/#sect-Major-Upgrading_the_Overcloud
  ManagementNetworkVlanID:
    default: 60
    description: Vlan ID for the management network traffic.
    type: number
  ControlPlaneSubnetCidr: # Override this via parameter_defaults
    default: '24'
    description: The subnet CIDR of the control plane network.
    type: string
  ControlPlaneDefaultRoute: # Override this via parameter_defaults
    description: The subnet CIDR of the control plane network.
    type: string
  ExternalInterfaceDefaultRoute:
    default: '10.0.0.1'
    description: default route for the external network
    type: string
# For RHOSP8 - see https://access.redhat.com/documentation/en/red-hat-openstack-platform/version-8/director-installation-and-usage/#sect-Major-Upgrading_the_Overcloud
  ManagementInterfaceDefaultRoute:
    default: ''
    description: default route for the external network
    type: string
  DnsServers: # Override this via parameter_defaults
    default: []
    description: A list of DNS servers (2 max for some implementations) that will be added to resolv.conf.
    type: json
  EC2MetadataIp: # Override this via parameter_defaults
    description: The IP address of the EC2 metadata server.
    type: string

resources:
  OsNetConfigImpl:
    type: OS::Heat::StructuredConfig
    properties:
      group: os-apply-config
      config:
        os_net_config:
          network_config:
            -
              type: ovs_bridge
              name: br-provisioning
              use_dhcp: false
              dns_servers: {get_param: DnsServers}
              addresses:
                -
                  ip_netmask:
                    list_join:
                      - '/'
                      - - {get_param: ControlPlaneIp}
                        - {get_param: ControlPlaneSubnetCidr}
              routes:
              # HAILSTORM: don't set the default route on the provisioning network, we need it on the service nw
              #  -
              #    ip_netmask: 0.0.0.0/0
              #    next_hop: {get_param: ControlPlaneDefaultRoute}
              #    # Optionally have this interface as default route
              #    default: true
                -
                  ip_netmask: 169.254.169.254/32
                  next_hop: {get_param: EC2MetadataIp}
              members:
                -
                  type: interface
                  name: nic1
                  # force the MAC address of the bridge to this interface
                  primary: true
            -
              type: interface
              name: nic2
              #use_dhcp: true
              use_dhcp: false
              addresses:
                -
                  ip_netmask: {get_param: StorageIpSubnet}
            -
              type: interface
              name: nic3
              use_dhcp: false
              addresses:
                -
                  ip_netmask: {get_param: StorageMgmtIpSubnet}
            -
              type: interface
              name: nic4
              use_dhcp: false
              addresses:
                -
                  ip_netmask: {get_param: InternalApiIpSubnet}
            -
              # Create a bridge which can also be used for VLAN-mode bridge mapping
              type: ovs_bridge
              name: br-tenant
              use_dhcp: false
              addresses:
                -
                  ip_netmask: {get_param: TenantIpSubnet}
              members:
                -
                  type: interface
                  name: nic5
                  use_dhcp: false
                  # force the MAC address of the bridge to this interface
                  primary: true
            # Uncomment when including environments/network-management.yaml
            # If setting default route on the Management interface, comment
            # out the default route on the External interface. This will
            # make the External API unreachable from remote subnets.
            -
              type: ovs_bridge
              name: br-admin
              #use_dhcp: true
              use_dhcp: false
              addresses:
                -
                  ip_netmask: {get_param: ManagementIpSubnet}
              members:
                -
                  type: interface
                  name: nic6
                  # force the MAC address of the bridge to this interface
                  primary: true
            #  routes:
            #    -
            #      default: true
            #      next_hop: {get_param: ManagementInterfaceDefaultRoute}
            -
              # HAILSTORM: this one is the services network
              type: ovs_bridge
              name: br-services
              use_dhcp: false
              addresses:
                -
                  ip_netmask: {get_param: ExternalIpSubnet}
              routes:
                -
                  ip_netmask: 0.0.0.0/0
                  next_hop: {get_param: ExternalInterfaceDefaultRoute }
                  default: yes
              members:
                -
                  type: interface
                  name: nic7
                  # force the MAC address of the bridge to this interface
                  primary: true
            -
              # HAILSTORM: this one is the guests aka public aka external network
              type: ovs_bridge
              name: br-guests
              use_dhcp: false
# don't allocate an IP address to the NIC - otherwise access from OSP instances to the OSP API will not work
# since the request will enter on the br-services interface and should exit via br-guests and is therefore discarded
# (unless we make a special kernel configs)
              members:
                -
                  type: interface
                  name: nic8
                  # force the MAC address of the bridge to this interface
                  primary: true
            -
              # HAILSTORM: this one is the baremetal network
              type: ovs_bridge
              name: br-baremetal
              use_dhcp: true
              members:
                -
                  type: interface
                  name: nic9
                  # force the MAC address of the bridge to this interface
                  primary: true

{# BEGIN COMMENTED OUT % if infrastructure_network_bgp1 is defined %}
            -
              # HAILSTORM: this one is bgp1 network
              type: ovs_bridge
              name: br-bgp1
              use_dhcp: false
              members:
                -
                  type: interface
                  name: nic9
                  # force the MAC address of the bridge to this interface
                  primary: true
{% endif %}
{% if infrastructure_network_bgp2 is defined %}
            -
              # HAILSTORM: this one is bgp2 network
              type: ovs_bridge
              name: br-bgp2
              use_dhcp: false
              members:
                -
                  type: interface
                  name: nic10
                  # force the MAC address of the bridge to this interface
                  primary: true
{% endif % END COMMENTED OUT ###}
outputs:
  OS::stack_id:
    description: The OsNetConfigImpl resource.
    value: {get_resource: OsNetConfigImpl}
