# Enable the creation of Neutron networks for isolated Overcloud
# traffic and configure each role to assign ports (related
# to that role) on these networks.
resource_registry:
  # NIC Configs for our roles
  OS::TripleO::Compute::Net::SoftwareConfig: ./nic-configs/compute.yaml
  OS::TripleO::Controller::Net::SoftwareConfig: ./nic-configs/controller.yaml

parameter_defaults:
  PublicVirtualFixedIPs: [{'ip_address':'{{ hostvars[openstack_vip].vm_nics[0].ip }}'}]
  ControlFixedIPs: [{'ip_address':'{{ infrastructure_network_provisioning.default_gw_host_prefix | regex_replace('(.*\.).*','\\1') }}{{ hostvars[openstack_vip].ansible_host|regex_replace('\d+\.\d+\.\d+\.(.*)','\\1') }}'}]
  InternalApiVirtualFixedIPs: [{'ip_address':'{{ infrastructure_network_internal_api.default_gw_host_prefix | regex_replace('(.*\.).*','\\1') }}{{ hostvars[openstack_vip].ansible_host|regex_replace('\d+\.\d+\.\d+\.(.*)','\\1') }}'}]
  StorageVirtualFixedIPs: [{'ip_address':'{{ infrastructure_network_storage.default_gw_host_prefix | regex_replace('(.*\.).*','\\1') }}{{ hostvars[openstack_vip].ansible_host|regex_replace('\d+\.\d+\.\d+\.(.*)','\\1') }}'}]
  StorageMgmtVirtualFixedIPs: [{'ip_address':'{{ infrastructure_network_storage_mgmt.default_gw_host_prefix | regex_replace('(.*\.).*','\\1') }}{{ hostvars[openstack_vip].ansible_host|regex_replace('\d+\.\d+\.\d+\.(.*)','\\1') }}'}]
  RedisVirtualFixedIPs: [{'ip_address':'{{ infrastructure_network_internal_api.default_gw_host_prefix | regex_replace('(.*\.).*','\\1') }}{{ hostvars[openstack_vip].ansible_host|regex_replace('\d+\.\d+\.\d+\.(.*)','\\1')|int + 1 }}'}]

  # Internal API used for private OpenStack Traffic
  InternalApiNetCidr: {{ infrastructure_network_internal_api.default_gw_host_prefix | ipaddr('network') }}/{{ infrastructure_network_internal_api.default_gw_host_prefix | ipaddr('prefix') }}
  InternalApiAllocationPools: [{'start': '{{ infrastructure_network_internal_api.osp_overcloud_start }}', 'end': '{{ infrastructure_network_internal_api.osp_overcloud_end }}'}]
  InternalApiNetworkVlanID: {{ infrastructure_network_internal_api.vlan }}

  # Tenant Network Traffic - will be used for VXLAN over VLAN
  TenantNetCidr: {{ infrastructure_network_tenant.default_gw_host_prefix | ipaddr('network') }}/{{ infrastructure_network_tenant.default_gw_host_prefix | ipaddr('prefix') }}
  TenantAllocationPools: [{'start': '{{ infrastructure_network_tenant.osp_overcloud_start }}', 'end': '{{ infrastructure_network_tenant.osp_overcloud_end }}'}]
  TenantNetworkVlanID: {{ infrastructure_network_tenant.vlan }}
  {% if enable_nuage is defined %}TenantInterfaceDefaultRoute: {{ infrastructure_network_tenant.nuage_vsr_host_prefix | ipaddr('address') }}{% endif %}

  # Public Storage Access - e.g. Nova/Glance <--> Ceph
  StorageNetCidr: {{ infrastructure_network_storage.default_gw_host_prefix | ipaddr('network') }}/{{ infrastructure_network_storage.default_gw_host_prefix | ipaddr('prefix') }}
  StorageAllocationPools: [{'start': '{{ infrastructure_network_storage.osp_overcloud_start }}', 'end': '{{ infrastructure_network_storage.osp_overcloud_end }}'}]
  StorageNetworkVlanID: {{ infrastructure_network_storage.vlan }}

  # Private Storage Access - i.e. Ceph background cluster/replication
  StorageMgmtNetCidr: {{ infrastructure_network_storage_mgmt.default_gw_host_prefix | ipaddr('network') }}/{{ infrastructure_network_storage_mgmt.default_gw_host_prefix | ipaddr('prefix') }}
  StorageMgmtAllocationPools: [{'start': '{{ infrastructure_network_storage_mgmt.osp_overcloud_start }}', 'end': '{{ infrastructure_network_storage_mgmt.osp_overcloud_end }}'}]
  StorageMgmtNetworkVlanID: {{ infrastructure_network_storage_mgmt.vlan }}

  ExternalNetCidr: {{ infrastructure_network_services.default_gw_host_prefix | ipaddr('network') }}/{{ infrastructure_network_services.default_gw_host_prefix | ipaddr('prefix') }}
  # Leave room for floating IPs in the External allocation pool (if required)
  ExternalAllocationPools: [{'start': '{{ infrastructure_network_services.osp_overcloud_start }}', 'end': '{{ infrastructure_network_services.osp_overcloud_end }}'}]
  # Set to the router gateway on the external network
  ExternalInterfaceDefaultRoute: {{ infrastructure_network_services.default_gw_host_prefix | ipaddr('address') }}

  ManagementNetCidr: {{ infrastructure_network_admin.default_gw_host_prefix | ipaddr('network') }}/{{ infrastructure_network_admin.default_gw_host_prefix | ipaddr('prefix') }}
  ManagementAllocationPools: [{'start': '{{ infrastructure_network_admin.osp_overcloud_start }}', 'end': '{{ infrastructure_network_admin.osp_overcloud_end }}'}]
  ManagementInterfaceDefaultRoute: {{ infrastructure_network_admin.default_gw_host_prefix | ipaddr('address') }}
  ManagementNetworkVlanID: {{ infrastructure_network_admin.vlan }}

  # Add in configuration for the Control Plane - see http://docs.openstack.org/developer/tripleo-docs/advanced_deployment/network_isolation.html#updating-existing-configuration-templates-to-support-new-parameters
  # CIDR subnet mask length for provisioning network
  ControlPlaneSubnetCidr: "{{ infrastructure_network_provisioning.default_gw_host_prefix | ipaddr('prefix') }}"
  # Gateway router for the provisioning network (or Undercloud IP)
  ControlPlaneDefaultRoute: {{ infrastructure_network_provisioning.default_gw_host_prefix | ipaddr('address') }}
  # this is intentional - the undercloud's (controller, compute) default gw should be on the services network
  # but we moved the decision directly to the nic-configs/*
  #ControlPlaneDefaultRoute: {{ infrastructure_network_services.default_gw_host_prefix | ipaddr('address') }}

  # Generally the IP of the Undercloud
  EC2MetadataIp: {{ vm_nics[0].ip }}

  NeutronExternalNetworkBridge: "''"
  #NeutronBridgeMappings: "datacentre:br-services,guests:br-guests,admin:br-admin,provisioning:br-prov{% if infrastructure_network_bgp1 is defined %},bgp1:br-bgp1{% endif %}{% if infrastructure_network_bgp2 is defined %},bgp2:br-bgp2{% endif %}"
  #NeutronFlatNetworks: "datacentre, guests, admin, provisioning{% if infrastructure_network_bgp1 is defined %}, bgp1{% endif %}{% if infrastructure_network_bgp2 is defined %}, bgp2{% endif %}"

{% if current_lifecycle_env.osp_in_baremetal %}
  # overcloud_provider_baremetal_networks:
  NeutronBridgeMappings: "{% for network in overcloud_provider_baremetal_networks %}{{ network.netname }}:br-{{ network.netname }}{% if not loop.last %},{% endif %}{% endfor %}"
  NeutronFlatNetworks: "{% for network in overcloud_provider_baremetal_networks %}{{ network.netname }}{% if not loop.last %},{% endif %}{% endfor %}"
{% else %}
  NeutronBridgeMappings: "{% for network in overcloud_provider_networks %}{{ network.netname }}:br-{{ network.netname }}{% if not loop.last %},{% endif %}{% endfor %}"
  NeutronFlatNetworks: "{% for network in overcloud_provider_networks %}{{ network.netname }}{% if not loop.last %},{% endif %}{% endfor %}"
{% endif %}

  # Customize bonding options, e.g. "bond_mode=4 lacp_rate=1 updelay=1000 miimon=100" or "bond_mode=active-backup"
  # see http://docs.openstack.org/developer/tripleo-docs/advanced_deployment/network_isolation.html
  #BondInterfaceOvsOptions: "bond_mode=balance-tcp lacp=active other_config:lacp-time=fast other_config:bond-detect-mode=miimon other_config:bond-miimon-interval=100 other_config:bond_updelay=1000 other-config:lacp-fallback-ab=true"
  #BondInterfaceOvsOptions: "bond_mode=balance-slb"
  # we use Linux-Bonds here and misuse the param
{% if current_lifecycle_env.osp_in_baremetal %}
  BondInterfaceOvsOptions: "mode=802.3ad resend_igmp=1 updelay=1000 use_carrier=1 miimon=100 downdelay=0 xmit_hash_policy=0 primary_reselect=0 fail_over_mac=0 lacp_rate=0 ad_select=0"
{% else %}
  BondInterfaceOvsOptions: "mode=active-backup"
{% endif %}
  #BondInterfaceOvsOptions: "mode=1 miimon=100"
  #BondInterfaceOvsOptions: "mode=802.3ad resend_igmp=1 updelay=1000 use_carrier=1 miimon=100 downdelay=0 xmit_hash_policy=0 primary_reselect=0 fail_over_mac=0 arp_validate=0 lacp_rate=0 arp_interval=0 ad_select=0"
  #BondInterfaceOvsOptions: "mode=802.3ad resend_igmp=1 updelay=1000 use_carrier=1 miimon=100 downdelay=0 xmit_hash_policy=0 primary_reselect=0 fail_over_mac=0 lacp_rate=0 ad_select=0"
