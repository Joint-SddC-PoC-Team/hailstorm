- name: get server facts
  os_server_facts:
     auth:  "{{ vars['os_auth_hailstorm_' + osp_tenant.replace('-','_')] }}"
     server: "{{ inventory_hostname_short }}"
     validate_certs: False
  delegate_to: localhost
#- debug: var=openstack_servers

- name: save vm existence as fact
  set_fact:
    vm_exists: "{{ openstack_servers|list|length > 0 }}"

# if ansible_host is not explicitly set in the inventory, it contains the inventory hostname
- name: save floating IP as fact ansible_host and set ansible_ssh_common_args
  set_fact:
    floating_ip: "{{ openstack_servers[0]['accessIPv4'] }}"
    ansible_host: "{{ openstack_servers[0]['accessIPv4'] }}"
    ansible_ssh_common_args: "-i ./binary/{{ hailstorm_ssh_priv_key_file }} -o StrictHostKeyChecking=no"
  when: vm_exists and ansible_host == inventory_hostname_short and jump_host is not defined

- name: set ansible_host and set ansible_ssh_common_args for VMs via jump host
  set_fact:
    ansible_host: "{{ openstack_servers[0]['private_v4'] }}"
    ansible_ssh_common_args: "-i ./binary/{{ hailstorm_ssh_priv_key_file }} -o StrictHostKeyChecking=no -o ProxyCommand='ssh -i ./binary/{{ hailstorm_ssh_priv_key_file }} -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -W %h:%p -q root@{{ hostvars[jump_host].ansible_host }}'"
    vm_exists: true
    override_wait_for_delegate_host: "{{ jump_host }}"
  when: vm_exists and ansible_host == inventory_hostname_short and jump_host is defined and ansible_host in hostvars[jump_host]

- name: set osp_internal_ip
  set_fact:
    osp_internal_ip: "{{ openstack_servers[0]['private_v4'] }}"
  when: vm_exists

- debug: var=ansible_host
- debug: var=ansible_ssh_common_args
