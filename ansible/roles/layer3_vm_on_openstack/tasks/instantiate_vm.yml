- block:
    # - name: create userdata file
    #   template: "src=cloud-config.txt.j2 dest=/tmp/{{ osp_tenant }}_{{ inventory_hostname_short }}_userdata.txt"

    - name: ensure that ports and IPs are present
      delegate_to: localhost
      os_port:
        auth: "{{ vars['os_auth_hailstorm_' + osp_tenant.replace('-','_')] }}"
        name: "{{ inventory_hostname_short }}-{{ item.netname }}"
        network: "{{ item.netname }}"
        fixed_ips:
          - ip_address: "{{ item.ip }}"
        mac_address: "{{ item.mac }}"
        validate_certs: False
      with_items: "{{ vm_nics }}"
      when: item.ip != ""
      register: temp_ports

    - name: instantiate image
      delegate_to: localhost
      os_server:
        auth: "{{ vars['os_auth_hailstorm_' + osp_tenant.replace('-','_')] }}"
        name: "{{ inventory_hostname_short }}"
        #userdata:  "{{ lookup('file','/tmp/{{ osp_tenant }}_{{ inventory_hostname_short }}_userdata.txt') }}"
        userdata:  "{{ lookup('template','cloud-config.txt.j2') }}"
        image:  "{{ osp_image }}"
        flavor: "{{ osp_flavor }}"
        terminate_volume: True
        # nics: >
        #   [ {% for network in vm_nics %}
        #         {'net-name': '{{ network.netname }}' }
        #     {% if not loop.last %},{% endif %}
        #     {% endfor %} ]
        nics: >
          [ {% for port_result in temp_ports.results %}
          {% if port_result|skipped %}
          { "net-name":"{{ port_result.item.netname }}" }
          {% else %}
          { "port-id":"{{ port_result.id }}" }
          {% endif %}
          {% if not loop.last %},{% endif %}
          {% endfor %} ]
        auto_ip: False
        config_drive: "{{ osp_config_drive|default(false) }}"
        #security_groups: "{% if vm_secgroups is defined and vm_secgroups %}{{  secgroup in vm_secgroups|default([])|join(',') }}{% else %}default-{{osp_tenant}}{% endif %}"
        security_groups: "{{ vm_secgroups|default(['default-' + osp_tenant]) }}"
        availability_zone: "{{ osp_availability_zone|default('production') }}"
        validate_certs: False

  delegate_to: localhost


# - name: add security group to server (stopgap measure to address HSRACKDEV-517)
#   shell: >
#     . ~/{{ stack_name }}rc_v3 &&
#     export OS_TENANT_NAME={{ osp_tenant }} &&
#     export OS_PROJECT_NAME={{ osp_tenant }} &&
#     export OS_PROJECT_DOMAIN_NAME={{ osp_domain_name }} &&
#     openstack server add security group {{ inventory_hostname_short }} {{ item }}
#   with_items: "{{ vm_secgroups|default(['default-' + osp_tenant]) }}"
#   delegate_to: rhosp-director
#   become: yes
#   become_user: "{{ hostvars['rhosp-director'].rhosp_stack_user }}"
