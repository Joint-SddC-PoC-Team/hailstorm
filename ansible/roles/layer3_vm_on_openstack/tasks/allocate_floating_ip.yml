- block:
    # - debug: var=temp_internal_network
    # - debug: var=temp_floating_ip
    # - debug: var=temp_internal_network_ip

    - name: check if DNS for the floating IP was already registered
      shell: echo {{ hostvars['ipa'].ipa_admin_password }} | kinit admin && ipa dnsrecord-find  {{ node_hailstorm_dns_domain }} --name={{ inventory_hostname_short }}
      register: dnsrecord
      become_user: root
      become: True
      delegate_to: ipa
      failed_when: "dnsrecord.rc != 0 and 'Number of entries returned 0' not in dnsrecord.stdout_lines"

    - set_fact: dns_floating_ip="{{ dnsrecord.stdout_lines[2].split(' ')[4] }}"
      when: dnsrecord.rc == 0

    - name: assign floating IP
      os_floating_ip:
         auth:  "{{ vars['os_auth_hailstorm_' + osp_tenant.replace('-','_')] }}"
         server: "{{ inventory_hostname_short }}"
         floating_ip_address: "{{ dns_floating_ip }}"
         validate_certs: False
      delegate_to: localhost
      when: dnsrecord.rc == 0


    - name: assign floating IP
      os_floating_ip:
         auth:  "{{ vars['os_auth_hailstorm_' + osp_tenant.replace('-','_')] }}"
         server: "{{ inventory_hostname_short }}"
         validate_certs: False
         wait: yes
         network: "{{ infrastructure_network_guests.netname }}"
      register: assign_floating_ip
      delegate_to: localhost
      when: dnsrecord.rc != 0

    - debug: var=assign_floating_ip
    - name: register DNS for the floating IP 
      shell: echo {{ hostvars['ipa'].ipa_admin_password }} | kinit admin && ipa dnsrecord-add {{ node_hailstorm_dns_domain }} {{ inventory_hostname_short }} --a-rec={{ assign_floating_ip.floating_ip.floating_ip_address }}
      become_user: root
      become: True
      delegate_to: ipa
      when: dnsrecord.rc != 0

  when: >
    infrastructure_osp_tenant_internal_network.netname in (vm_nics|map(attribute="netname")|list)
    and
    jump_host is not defined
