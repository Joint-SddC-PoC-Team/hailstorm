- name: check IPA is available
  wait_for: host={{ inventory_hostname }} port=22 timeout=1
  register: ipa_available
  ignore_errors: true

- name: copy certificate of IPA
  command: cat /etc/ipa/ca.crt
  delegate_to: ipa
  register: certificate
  changed_when: false
  failed_when: certificate.stdout == ''
  when: ipa_available|success

- name: ensure that /etc/origin/master directory exists
  file: dest=/etc/origin/master state=directory

- name: create the cert on the OSE installer
  copy: content="{{ certificate.stdout }}" dest=/etc/origin/master/ipa-ca.crt
  when: ipa_available|success

- name: create certificate files
  copy: content="{{ item.value }}" dest="/root/{{ item.name }}" mode="400"
  when: openshift_key is defined and openshift_cert is defined
  with_items:
    - name: openshift.key
      value: "{{ openshift_key }}"
    - name: openshift.crt
      value: "{{ openshift_cert }}"
    - name: openshift-ca.crt
      value: "{{ openshift_cacert }}"

- name: grab hailstorm private key
  command: cat binary/{{ hailstorm_ssh_priv_key_file }}
  delegate_to: localhost
  register: hailstorm_private_key

- name: create the hailstorm key on the OSE installer
  copy: content="{{ hailstorm_private_key.stdout }}" dest=/root/.ssh/{{ hailstorm_ssh_priv_key_file }} mode=0400

- name: create ansible.cfg
  copy:
    content: |
      [ssh_connection]
      pipelining=True
      retries=10
      forks=20
    dest: ~/ansible.cfg

- name: create /etc/ansible/hosts for OVS multitenant SDN
  template: src=hosts.j2 dest=/etc/ansible/hosts
  register: ansible_hosts
  when: enable_nuage is not defined

- name: create /etc/ansible/hosts for Nuage SDN
  template: src=hosts_nuagesdn.j2 dest=/etc/ansible/hosts
  register: ansible_hosts_nuage
  when: enable_nuage is defined

- name: Register Nuage SDN files repo IP
  command: dig {{ layer1_ansible_host }} +short
  delegate_to: localhost
  register: nuage_files_IP
  when: enable_nuage is defined

- name: copy over Nuage SDN certs and docker images from layer1 host (where it has to be copied to beforehand!)
  command: rsync -e "ssh -i /root/.ssh/{{ hailstorm_ssh_priv_key_file }} -o StrictHostKeyChecking=no" -aviPHAXS root@{{ nuage_files_IP.stdout }}:{{Â nfs_nuage_binary_dir }}/ocp .
  when: enable_nuage is defined

- name: distribute Nuage master image in master nodes
  command: ansible masters -m copy -a "src=/root/ocp/dockerimages/nuage-master-docker-5.1.1-5.tar dest=/root/nuage-master-docker-5.1.1-5.tar"
  when: enable_nuage is defined
- name: distribute Nuage cni image in all the nodes
  command: ansible nodes -m copy -a "src=/root/ocp/dockerimages/nuage-cni-docker-5.1.1-5.tar dest=/root/nuage-cni-docker-5.1.1-5.tar"
  when: enable_nuage is defined
- name: distribute Nuage vrs image in all the nodes
  command: ansible nodes -m copy -a "src=/root/ocp/dockerimages/nuage-vrs-docker-5.1.1-9.tar dest=/root/nuage-vrs-docker-5.1.1-9.tar"
  when: enable_nuage is defined

- name: docker load Nuage SDN master images into master nodes
  command: ansible masters -a "docker load -i /root/nuage-master-docker-5.1.1-5.tar"
  when: enable_nuage is defined
- name: docker load Nuage SDN cni images into all nodes
  command: ansible nodes -a "docker load -i /root/nuage-cni-docker-5.1.1-5.tar"
  when: enable_nuage is defined
- name: docker load Nuage SDN vrs images into all nodes
  command: ansible nodes -a "docker load -i /root/nuage-vrs-docker-5.1.1-9.tar"
  when: enable_nuage is defined

- name: clone openshift-ansible installer for Nuage SDN integrated OpenShift
  command: git clone https://github.com/openshift/openshift-ansible.git
  when: enable_nuage is defined

- name: clean images files from the installer host
  file:
    state: absent
    path: "/root/ocp/dockerimages"
  when: enable_nuage is defined
- name: clean images files from all the nodes
  command: ansible nodes -a "rm -f /root/nuage*tar"
  when: enable_nuage is defined

- name: ensure that /etc/origin/master exists on all masters
  shell: ansible masters -m file -a "path=/etc/origin/master state=directory"

- name: spread ipa-ca.crt in the masters group
  shell: ansible masters -m copy -a "src=/etc/origin/master/ipa-ca.crt dest=/etc/origin/master/ipa-ca.crt"
  when: ipa_available|success

- block:
    - name: start IPTables services on installer (to prevent playbook from hanging when it enables the service)
      service: name=iptables state=started enabled=yes

    - name: pause for IPTables to react
      pause: seconds=15

    - name: run installer playbook with OVS based SDN
      shell: ansible-playbook /usr/share/ansible/openshift-ansible/playbooks/byo/config.yml 2>&1 >~/openshift_install.log
      async: 7200
      poll: 0
      tags: ['playbook']
      register: playbook
      when: enable_nuage is not defined

    - name: run installer playbook for Nuage SDN integration
      shell: cd openshift-ansible && git checkout tags/openshift-ansible-3.7.0-0.116.0 && ansible-playbook /root/openshift-ansible/playbooks/byo/config.yml 2>&1 >~/openshift_install.log
      async: 7200
      poll: 0
      tags: ['playbook']
      register: playbook2
      when: enable_nuage is defined

    - name: check on installer playbook completed
      async_status: jid={{ playbook.ansible_job_id|default(playbook2.ansible_job_id) }}
      register: job_result
      until: job_result.finished
      retries: 480
      delay: 15
  when: ansible_hosts|changed or ansible_hosts_nuage|changed
