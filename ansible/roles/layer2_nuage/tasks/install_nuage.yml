- name: check for existence of config (via created hosts file)
  stat: path="~{{ nuage_user }}/nuage-metro/hosts"
  register: has_nuconfiguration

- debug:
    msg: "ATTENTION: WE WILL NOT ROLLOUT ANYTHING HERE FOR NUAGE!!! There is already a nuage configuration, so we assume that the appliances are already rolled out."
    verbosity: 0
  when: has_nuconfiguration.stat.exists == True

- block:
    - name: Ensure "retries=10" is in section "[ssh_connection]" nuage-metro/ansible.cfg
      ini_file:
        path: nuage-metro/ansible.cfg
        section: ssh_connection
        option: retries
        value: 10
        backup: yes

    - name: Phase I) initial build - base variables and hosts
      shell: source ansible-2.2.1.0/bin/activate && cd nuage-metro && ansible-playbook -vv -i hosts_sddc -e "build_vars_file=ha_build_vars.yml" build.yml -t always

    - name: add hosts to hosts_sddc
      shell: cd nuage-metro && cat hosts >> hosts_sddc

    - name: Phase II) sw unpack - phase I was needed for that
      shell: source ansible-2.2.1.0/bin/activate && cd nuage-metro && ansible-playbook -vv -i hosts_sddc -e "build_vars_file=ha_build_vars.yml" nuage_unzip.yml

    - name: Phase III) build configs - configs for all products are created here
      shell: source ansible-2.2.1.0/bin/activate && cd nuage-metro && ansible-playbook -vv -i hosts_sddc -e "build_vars_file=ha_build_vars.yml" build.yml

    - debug:
        msg: "Hint: To follow the creation of the Nuage appliances, login to the install-host as root and run tail -f /home/nuage/nuage-metro/ansible.log."
        verbosity: 0

    - name: Phase IV) install
      shell: source ansible-2.2.1.0/bin/activate && cd nuage-metro && ansible-playbook -vv -i hosts_sddc -e "build_vars_file=ha_build_vars.yml" install_vcs.yml

    - name: Phase V) configure VSRs
      shell: "sshpass -p admin ssh admin@{{ hostvars['{{ item }}'].vm_nics[0].ip }} < ~/vsr/good_{{ item }}.cfg > ~/vsr/good_{{ item }}.cfg.log"
      with_items:
        - r1
        - r2
    
  when: has_nuconfiguration.stat.exists == False
  become: yes
  become_user: "{{ nuage_user }}"
