# - name: install epel-release
#   yum:
#     name: "{{ epel_rpm }}"
#     state: present
# - name: enable epel
#   lineinfile:
#     path: /etc/yum.repos.d/epel.repo
#     regexp: '^enabled='
#     line: 'enabled=1'
- name: install additional packages
  yum: name=htop,atop,ansible enablerepo={{ satellite_repo_name_epel }} state=latest
# - name: disable epel
#   lineinfile:
#     path: /etc/yum.repos.d/epel.repo
#     regexp: '^enabled='
#     line: 'enabled=0'
#
- block:
   - file: path=/root/.pip/ state=directory
   - name: Copy pip.conf
     copy:
       dest: /root/.pip/pip.conf
       content: |
        [global]
        no-index = true
        find-links = file:///opt/pip
   - name: Synchronize ansible/pip
     synchronize:
       src: binary/pip/
       dest: /opt/pip/
       use_ssh_args: true
  when: use_local_pip is defined and use_local_pip

- name: Install python2-pip, python2-virtualenv and dependencies for ansible
  yum: name="{{ item }}" enablerepo={{ satellite_repo_name_epel }} state=present
  with_items:
    - python2-pip
    - python-devel.x86_64
    - sshpass
    - python-virtualenv
    - libffi-devel
    - openssl-devel
    - pytz
    - unzip
    - '@development'

- name: Install ansible from pip
  pip:
    name=ansible
    state=present
    version={{ current_lifecycle_env.ansible_use_version }}

- name: Configure virtualenv for each ansible extra version
  file:
    path="/opt/ansible-{{ item }}"
    state=directory
    owner=root
    group=root
    mode=0755
  with_items: "{{current_lifecycle_env.ansible_available_versions}}"

- name: Run virtualenv command for the directories
  shell: ls /opt/ansible-{{ item }}/bin/activate >/dev/null  2>&1 || virtualenv /opt/ansible-{{ item }}
  changed_when: False
  with_items:  "{{current_lifecycle_env.ansible_available_versions}}"


- name: Install cryptography=2.0 with pip because latest version fails
  pip:
    name="{{ item[0] }}"
    state=present
    version="{{ item[1] }}"
    virtualenv="/opt/ansible-{{ item[2] }}"
    extra_args="--no-index --find-links file:///opt/pip/"
  with_nested:  
     - [["cffi", "1.11.2"],["cryptography","2.0"]]
     - "{{current_lifecycle_env.ansible_available_versions}}"
  when: use_local_pip is defined 

- name: Install cryptography=2.0 with pip because latest version fails
  pip:
    name=cryptography
    state=present
    version=2.0
    virtualenv="/opt/ansible-{{ item }}"
  with_items:  "{{current_lifecycle_env.ansible_available_versions}}"
  when: use_local_pip is not defined 

- name: Install ansible inside the virtualenv
  pip:
    name=ansible
    state=present
    version="{{ item }}"
    virtualenv="/opt/ansible-{{ item }}"
  with_items:  "{{current_lifecycle_env.ansible_available_versions}}"

- name: Install pip packages to be able to use ansible modules inside virtualenv
  pip:
    name="{{ item }}"
    state=present
  with_items:
    - shade
    - nailgun
    - vspk

- name: Install pip packages to be able to use ansible modules inside virtualenv
  pip:
    name="{{ item[0] }}"
    virtualenv="/opt/ansible-{{ item[1] }}"
    state=latest
  with_nested:
    - ['pip', 'shade', 'nailgun', 'vspk']
    - "{{current_lifecycle_env.ansible_available_versions}}"
