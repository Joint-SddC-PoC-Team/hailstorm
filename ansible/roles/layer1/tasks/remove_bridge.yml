# - name: get current connections
#   shell: nmcli con show | cut -c68- | awk '{ print $1 }'
#   register: current_connections
#   changed_when: false
#
# - name: deactivate bridge
#   command: nmcli con down {{ infrastructure_network_guests.bridge }}
#   when: >
#     infrastructure_network_guests.forward_mode == "bridge"
#     and
#     infrastructure_network_guests.bridge not in current_connections.stdout_lines
#
# - name: create bridge
#   shell: nmcli con delete {{ infrastructure_network_guests.bridge }}
#   when: >
#     infrastructure_network_guests.forward_mode == "bridge"
#     and
#     infrastructure_network_guests.bridge not in current_connections.stdout_lines

- name: check bridge devices
  shell: virsh iface-list --all | awk 'NR>2 {print $1}'
  changed_when: false
  register: temp_bridge_config

- name: turn off libvirt iface
  shell: virsh iface-destroy {{ item.bridge }}
  with_items: "{{ infrastructure_networks }}"
  when: >
    (item.nic|default({},true))[layer1_ansible_host]|default(false,true)
    and
    item.bridge in temp_bridge_config.stdout_lines

- name: remove libvirt iface
  shell: virsh iface-undefine {{ item.bridge }}
  with_items: "{{ infrastructure_networks }}"
  when: >
    (item.nic|default({},true))[layer1_ansible_host]|default(false,true)
    and
    item.bridge in temp_bridge_config.stdout_lines

# - name: reconstitute ifcfg file
#   copy: src="/etc/sysconfig/network-scripts/BACKUP-{{ external_network_config.guest_network_bridging.layer1_dev }}" dest="/etc/sysconfig/network-scripts/ifcfg-{{ external_network_config.guest_network_bridging.layer1_dev }}" remote_src=true

- name: remove bridge definition file
  file: name=/tmp/iface-{{ item.bridge }} state=absent
  with_items: "{{ infrastructure_networks }}"
  when: >
    (item.nic|default({},true))[layer1_ansible_host]|default(false,true)
    and
    item.bridge in temp_bridge_config.stdout_lines
