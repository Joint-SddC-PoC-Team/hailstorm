<network>
  <name>{% if temp_master_network|default(false,true) %}x{% endif %}{{ item.netname }}</name>
  <bridge name="{% if temp_master_network|default(false,true) %}x{% endif %}{{ item.bridge }}" />

  {# if a bridging configuration is present for the host and we are not creating the master networks #}
  {% if ((node_bridge_config|default({},true))[item.netname]|default({},true)).nic is defined and not temp_master_network|default(false,true) %}
  <forward mode="bridge"/>
  {% else %}
  <forward mode="nat"/>
  {% endif %}

  {# if no bridging information is present, we can add the IP configuration directly - otherwise via patched master network #}
  {% if temp_master_network|default(false,true) or ((node_bridge_config|default({},true))[item.netname]|default({},true)).nic is not defined %}
  <ip address="{{ item.default_gw_host_prefix | ipaddr('address') }}" netmask="{{ item.default_gw_host_prefix | ipaddr('netmask') }}">

  {% if item.dhcp_start is defined and item.dhcp_end is defined %}
    <dhcp>
      <range start="{{item.dhcp_start}}" end="{{item.dhcp_end}}" />
      {% for host in groups.all %}{% if host != 'localhost' and hostvars[host].vm_nics is defined %}
      {% for nic in hostvars[host].vm_nics %}{% if nic.netname is defined and nic.netname == item.netname  %}
       <host mac="{{ nic.mac }}" name="{{ hostvars[host].hostname }}" ip="{{ nic.ip  }}" />
      {% endif %}{% endfor %}
      {% endif %}{% endfor %}
    </dhcp>
  {% endif %}

  </ip>
  {% endif %}
</network>
