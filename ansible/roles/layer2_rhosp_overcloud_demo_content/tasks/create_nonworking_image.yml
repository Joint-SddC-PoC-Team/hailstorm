- block:
    - name: get image list (default project)
      shell: >
        . ~/{{ stack_name }}rc_v3 &&
        openstack image show -f json this_image_will_not_work
      register: image
      changed_when: false
      failed_when: false

    - name: create non-working image (from layer1 host binary dir)
      shell: >
        . ~/{{ stack_name }}rc_v3 &&
        ssh -o StrictHostKeyChecking=no {{ rhosp_stack_user }}@{{ infrastructure_network_admin.default_gw_host_prefix | ipaddr('address') }} cat {{ layer1_binary_dir }}/{{ current_lifecycle_env.osp_kvm_images[0].image }} |
        openstack image create --public --disk-format qcow2 -f json this_image_will_not_work
      when: image.stdout == ''
      register: image2
  become: yes
  become_user: "{{ rhosp_stack_user }}"

#- debug: msg={{ image.stdout | from_json | selectattr("Field","match","^id$")| map(attribute="Value") | list | join(" ") }}

- name: determine image uuid
  set_fact:
    image_uuid: '{% if current_lifecycle_env.openstack_version < 10 %}{{ image2.stdout | from_json | selectattr("Field","match","^id$")| map(attribute="Value") | first }}{% else %}{{ (image2.stdout | from_json).id }}{% endif %}'
  when: image2.stdout is defined and image2.stdout != ''

- name: delete image from underlying glance store
  file: state=absent path={{ nfs_rhosp_glance_path }}/{{ image_uuid }}
  delegate_to: "{{ infrastructure_delegate_nfs_server }}"
  when: image2.stdout is defined and image2.stdout != ''
