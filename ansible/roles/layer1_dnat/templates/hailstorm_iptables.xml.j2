<?xml version="1.0" encoding="UTF-8"?>
<hs:iptables xmlns:hs="https://github.com/wrichter/hailstorm">
  {% for network in infrastructure_networks %}
  <network name="{% if layer1_ansible_host == infrastructure_network_master|default("") %}x{% endif %}{{ network.netname }}">
  {% for mapping in external_network_config.services_network_dnat.mapping %}
  {% if mapping.expose_machine is defined and network.netname == mapping.via_network and hostvars[mapping.expose_machine] is defined %}

  {% for nic in hostvars[mapping.expose_machine].vm_nics %}
  {% if nic.netname == network.netname %}

  {% for port in mapping.ports %}
  <rule>PREROUTING -t nat -p {{ port.proto }} --dport {{ port.from_port }} -d {{ mapping.on_host_prefix }} -j DNAT --to {{ nic.ip }}:{{ port.to_port }}</rule>
  <rule>FORWARD -t filter -o {% if layer1_ansible_host == infrastructure_network_master|default("") %}x{% endif %}{{ network.bridge }} -p {{ port.proto }} -d {{ nic.ip }} --dport {{ port.to_port }} -j ACCEPT</rule>
  {% endfor %}

  {% endif %}

  {% endfor %}
  {% endif %}
  {% endfor %}

  {% if network.forward_mode == 'nat' and node_network_forward_mode|default('') == 'none' %}
  {# allow only install-host to reach outside world, since it needs to be able to connect to the layer1 host(s) #}
  <rule>FORWARD -t filter -i {% if layer1_ansible_host == infrastructure_network_master|default("") %}x{% endif %}{{ network.bridge }} -s {{ network.default_gw_host_prefix }} -j REJECT</rule>
  <rule>FORWARD -t filter -i {% if layer1_ansible_host == infrastructure_network_master|default("") %}x{% endif %}{{ network.bridge }} -s {{ network.default_gw_host_prefix }} -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT</rule>
  {% if network.netname in (hostvars['install-host'].vm_nics|map(attribute='netname')|list) %}
  <rule>FORWARD -t filter -i {% if layer1_ansible_host == infrastructure_network_master|default("") %}x{% endif %}{{ network.bridge }} -s {{ (hostvars['install-host'].vm_nics|selectattr('netname','match','^' + network.netname + '$')|first).ip }} -j ACCEPT</rule>
  {% endif %}
  {% endif %}
  </network>
  {% endfor %}
</hs:iptables>
