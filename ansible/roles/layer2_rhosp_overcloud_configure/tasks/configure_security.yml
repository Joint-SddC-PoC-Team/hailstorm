- block:

    - name: create security group default-project for each project
      os_security_group:
        auth: "{{ vars['os_auth_hailstorm_' + item.replace('-','_')] }}"
        name: "default-{{ item }}"
        validate_certs: False
      with_items: "{{ osp_projects }}"

    - name: configure basic rule for new default-project sg
      os_security_group_rule:
        auth: "{{ vars['os_auth_hailstorm_' + item.replace('-','_')] }}"
        security_group: "default-{{ item }}"
        remote_group: "default-{{ item }}"
        validate_certs: False
      with_items: "{{ osp_projects }}"

    - name: configure basic rule for new default-project sg (IPv6)
      os_security_group_rule:
        auth: "{{ vars['os_auth_hailstorm_' + item.replace('-','_')] }}"
        security_group: "default-{{ item }}"
        remote_group: "default-{{ item }}"
        ethertype: IPv6
        validate_certs: False
      with_items: "{{ osp_projects }}"



    - name: configure default security group to allow ssh 
      os_security_group_rule:
        auth: "{{ vars['os_auth_hailstorm_' + item.replace('-','_')] }}"
        security_group: "default-{{item}}"
        protocol: "tcp"
        port_range_min: 22
        port_range_max: 22
        validate_certs: False
      with_items: "{{ osp_projects }}"

    - name: configure default security group to allow icmp
      os_security_group_rule:
        auth: "{{ vars['os_auth_hailstorm_' + item.replace('-','_')] }}"
        security_group: "default-{{item}}"
        protocol: "icmp"
        validate_certs: False
      with_items: "{{ osp_projects }}"

    - name: create security group webserver in tenant demo-infra
      os_security_group:
        auth: "{{ os_auth_hailstorm_demo_infra }}"
        name: webserver
        validate_certs: False

    - name: allow HTTP in webserver security group
      os_security_group_rule:
        auth: "{{ os_auth_hailstorm_demo_infra }}"
        security_group: webserver
        protocol: "tcp"
        port_range_min: 80
        port_range_max: 80
        validate_certs: False

    - name: allow HTTPS in webserver security group
      os_security_group_rule:
        auth: "{{ os_auth_hailstorm_demo_infra }}"
        security_group: webserver
        protocol: "tcp"
        port_range_min: 443
        port_range_max: 443
        validate_certs: False


  delegate_to: localhost
- block:
    - block:
        - name: get lb security group info
          shell: >
            . ~/overcloudrc_v3 &&
            for uuid in `openstack security group list --project {{ ocp_tenant }} --project-domain {{ osp_domain_name }} -c ID -c Name -f value|grep ocp_lb|awk '{print $1}'`; do
            openstack security group show -c id -c project_id -f yaml $uuid;
            done | awk 'BEGIN { print "[" } /^id: /{ if (id != "") print ","; id=$2} /project_id: /{ print "{\"id\":\"" id "\",\"project_id\":\"" $2 "\"}" } END { print "]" }'
          register: security_group_info
          changed_when: false
        - debug: var=security_group_info
        - name: add security group lb if it does not exist, and its rules
          shell: >
            . ~/overcloudrc_v3 &&
            openstack security group create --project {{ ocp_tenant }} ocp_lb &&
            openstack security group rule create --project {{ ocp_tenant }} --project-domain {{ osp_domain_name }} --ingress --proto icmp ocp_lb &&
            openstack security group rule create --project {{ ocp_tenant }} --project-domain {{ osp_domain_name }} --ingress --proto tcp --dst-port 22 ocp_lb &&
            openstack security group rule create --project {{ ocp_tenant }} --project-domain {{ osp_domain_name }} --ingress --proto tcp --dst-port 80 ocp_lb &&
            openstack security group rule create --project {{ ocp_tenant }} --project-domain {{ osp_domain_name }} --ingress --proto tcp --dst-port 8443 ocp_lb &&    
            openstack security group rule create --project {{ ocp_tenant }} --project-domain {{ osp_domain_name }} --ingress --proto tcp --dst-port 443 ocp_lb        
          when: (security_group_info.stdout == '[\n]')  

        # add appnode security group in OpenShift project
        - name: get appnode security group info
          shell: >
            . ~/overcloudrc_v3 &&
            for uuid in `openstack security group list --project {{ ocp_tenant }} --project-domain {{ osp_domain_name }} -c ID -c Name -f value|grep ocp_appnode|awk '{print $1}'`; do
            openstack security group show -c id -c project_id -f yaml $uuid;
            done | awk 'BEGIN { print "[" } /^id: /{ if (id != "") print ","; id=$2} /project_id: /{ print "{\"id\":\"" id "\",\"project_id\":\"" $2 "\"}" } END { print "]" }'
          register: security_group_info
          changed_when: false
        - debug: var=security_group_info
        - name: add security group ocp_appnode if it does not exist, and its rules
          shell: >
            . ~/overcloudrc_v3 &&
            openstack security group create --project {{ ocp_tenant }} ocp_appnode &&
            openstack security group rule create --project {{ ocp_tenant }} --project-domain {{ osp_domain_name }} --ingress --proto icmp ocp_appnode &&
            openstack security group rule create --project {{ ocp_tenant }} --project-domain {{ osp_domain_name }} --ingress --proto tcp --dst-port 22 ocp_appnode &&
            openstack security group rule create --project {{ ocp_tenant }} --project-domain {{ osp_domain_name }} --ingress --proto tcp --dst-port 80 ocp_appnode &&
            openstack security group rule create --project {{ ocp_tenant }} --project-domain {{ osp_domain_name }} --ingress --proto tcp --dst-port 443 ocp_appnode &&
            openstack security group rule create --project {{ ocp_tenant }} --project-domain {{ osp_domain_name }} --ingress --proto tcp --dst-port 9200 ocp_appnode &&
            openstack security group rule create --project {{ ocp_tenant }} --project-domain {{ osp_domain_name }} --ingress --proto tcp --dst-port 9300 ocp_appnode && 
            openstack security group rule create --project {{ ocp_tenant }} --project-domain {{ osp_domain_name }} --ingress --proto tcp --dst-port 10250 --src-group ocp_appnode ocp_appnode &&
            openstack security group rule create --project {{ ocp_tenant }} --project-domain {{ osp_domain_name }} --ingress --proto udp --dst-port 4789 --src-group ocp_appnode ocp_appnode
          when: (security_group_info.stdout == '[\n]')

        # add master security group in OpenShift project
        - name: get master security group info
          shell: >
            . ~/overcloudrc_v3 &&
            for uuid in `openstack security group list --project {{ ocp_tenant }} --project-domain {{ osp_domain_name }} -c ID -c Name -f value|grep ocp_master|awk '{print $1}'`; do
            openstack security group show -c id -c project_id -f yaml $uuid;
            done | awk 'BEGIN { print "[" } /^id: /{ if (id != "") print ","; id=$2} /project_id: /{ print "{\"id\":\"" id "\",\"project_id\":\"" $2 "\"}" } END { print "]" }'
          register: security_group_info
          changed_when: false
        - debug: var=security_group_info
        - name: add security group master if it does not exist, and its rules
          shell: >
            . ~/overcloudrc_v3 &&
            openstack security group create --project {{ ocp_tenant }} ocp_master &&
            openstack security group rule create --project {{ ocp_tenant }} --project-domain {{ osp_domain_name }} --ingress --proto tcp --dst-port 8443 ocp_master &&
            openstack security group rule create --project {{ ocp_tenant }} --project-domain {{ osp_domain_name }} --ingress --proto tcp --dst-port 443 ocp_master &&
            openstack security group rule create --project {{ ocp_tenant }} --project-domain {{ osp_domain_name }} --ingress --proto tcp --dst-port 22 ocp_master &&
            openstack security group rule create --project {{ ocp_tenant }} --project-domain {{ osp_domain_name }} --ingress --proto tcp --dst-port 2379:2380 --src-group ocp_master ocp_master &&
            openstack security group rule create --project {{ ocp_tenant }} --project-domain {{ osp_domain_name }} --ingress --proto tcp --dst-port 8053 --src-group ocp_appnode ocp_master &&
            openstack security group rule create --project {{ ocp_tenant }} --project-domain {{ osp_domain_name }} --ingress --proto udp --dst-port 8053 --src-group ocp_appnode ocp_master &&
            openstack security group rule create --project {{ ocp_tenant }} --project-domain {{ osp_domain_name }} --ingress --proto tcp --dst-port 24224 --src-group ocp_appnode ocp_master &&
            openstack security group rule create --project {{ ocp_tenant }} --project-domain {{ osp_domain_name }} --ingress --proto udp --dst-port 24224 --src-group ocp_appnode ocp_master
          when: (security_group_info.stdout == '[\n]')

      when: current_lifecycle_env.openstack_version >= 10
  become: yes
  become_user: "{{ rhosp_stack_user }}"
